@model Models.ApplicantRegistrationBO
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="wrapper">
    <div class="container-fluid">
        <!-- Page title box -->
        <div class="page-title-alt-bg"></div>
        <div class="page-title-box">
            <ol class="breadcrumb float-right">
                <li class="breadcrumb-item"><a href="javascript:void(0);">Applicant</a></li>
                <li class="breadcrumb-item active">Applicant Registration</li>
            </ol>
            <h4 class="page-title"><i class="mdi mdi-account-multiple" style="color:black;"></i> Applicant Registration</h4>
        </div>
        @*<div class="form-group">
                <div class="col-lg-12">
                    <div style="width:100%;" align="right">
                        <button type="button" class="btn btn-secondary btn-rounded w-md" onclick="Cancel();">Cancel</button>
                        @*<button type="button" class="btn btn-primary btn-rounded w-md" onclick="Clear();">Clear</button>
                    </div>
                </div>
            </div>*@
    </div>

    <div class="card-box">
        <div class="row" style="background-color:white">
            <div class="col-sm-2" style="border:double;border-color:#480202;background-color:#480202">
                <div class="nav flex-column nav-pills" id="v-pills-tab" role="tablist" aria-orientation="vertical">
                    <a class="nav-link active" id="v-pills-PersonalInformation-tab" data-toggle="pill" href="#v-pills-PersonalInformation-tabContent" role="tab" aria-controls="v-pills-PersonalInformation-tabContent" aria-selected="true">Personal Information</a>
                    <a class="nav-link" id="v-pills-Qualification-tab" data-toggle="pill" href="#v-pills-Qualification-tabContent" role="tab" aria-controls="v-pills-Qualification-tabContent" aria-selected="false">Qualification</a>
                    <a class="nav-link" id="v-pills-EmploymentHistory-tab" data-toggle="pill" href="#v-pills-EmploymentHistory-tabContent" role="tab" aria-controls="v-pills-EmploymentHistory-tabContent" aria-selected="false">Employment History</a>
                    <a class="nav-link" id="v-pills-MotivationSkills-tab" data-toggle="pill" href="#v-pills-MotivationSkills-tabContent" role="tab" aria-controls="v-pills-MotivationSkills-tabContent" aria-selected="false"> Motivation Skills</a>
                    <a class="nav-link" id="v-pills-Referees-tab" data-toggle="pill" href="#v-pills-Referees-tabContent" role="tab" aria-controls="v-pills-Referees-tabContent" aria-selected="false">Referees</a>
                    <a class="nav-link" id="v-pills-Declaration-tab" data-toggle="pill" href="#v-pills-Declaration-tabContent" role="tab" aria-controls="v-pills-Declaration-tabContent" aria-selected="false">Declaration</a>
                </div>
            </div>
            <div class="col-sm-10" style="border:double;border-color:#480202">
                <div class="tab-content" id="v-pills-tabContent">
                    <div class="tab-pane fade show active" id="v-pills-PersonalInformation-tabContent" role="tabpanel" aria-labelledby="v-pills-PersonalInformation-tab">
                        @Html.HiddenFor(m => m.ApplicantId)
                        <div class="col-sm-12">
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="form-group margin-m-b-20">
                                        <div style="padding:20px;">
                                            <div class="panel widget light-widget panel-bd-top">
                                                <div class="panel-heading no-title"></div>
                                                <div class="panel-body" style="border:thin">
                                                    <div class="text-center vd_info-parent">
                                                        <img src="@ViewBag.ImagePath" class="thumb" id="image" style="width:190px;height:220px;" />
                                                        <label class="col-sm-2"></label>
                                                        <input type="file" name="Photo" id="Photo" onchange="showMyImage(this)" style="padding-top:5px;margin-left:50px;" new { enctype="multipart/form-data" accept=".png,.jpg,.jpeg,.gif" } />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-sm-6">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <div class="row mgbt-sm-0" style="margin-top:20px;">
                                                <label class="col-sm-5">Title<span class="text-danger">*</span></label>
                                                <div class="col-sm-7">
                                                    @Html.DropDownListFor(m => m.TitleId, new SelectList(Model.TitleList, "Id", "Value"), "Select Title", new { @class = "form-control", id = "Title" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-12">
                                            <div class="row mgbt-sm-0">
                                                <label class="col-sm-5">First Name<span class="text-danger">*</span></label>
                                                <div class="col-sm-7">
                                                    @Html.TextBoxFor(model => model.FirstName, new { @placeholder = "First Name", @class = "form-control", id = "FirstName" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-12">
                                            <div class="row mgbt-sm-0">
                                                <label class="col-sm-5">Middle Name<span class="text-danger"></span></label>
                                                <div class="col-sm-7">
                                                    @Html.TextBoxFor(model => model.MiddleName, new { @placeholder = "Middle Name", @class = "form-control", id = "MiddleName" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-12">
                                            <div class="row mgbt-sm-0">
                                                <label class="col-sm-5">Last Name<span class="text-danger">*</span></label>
                                                <div class="col-sm-7">
                                                    @Html.TextBoxFor(model => model.LastName, new { @placeholder = "Last Name", @class = "form-control", id = "LastName" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-12">
                                            <div class="row mgbt-sm-0">
                                                <label class="col-sm-5">Date Of Birth<span class="text-danger">*</span></label>
                                                <div class="col-sm-7">
                                                    @Html.TextBoxFor(model => model.DateOfBirth, new { @placeholder = "Date Of Birth", @class = "form-control", id = "DateOfBirth" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-12">
                                            <div class="row mgbt-sm-0">
                                                <label class="col-sm-5">Gender<span class="text-danger">*</span></label>
                                                <div class="col-sm-7">
                                                    @Html.DropDownListFor(m => m.GenderId, new SelectList(Model.GenderList, "Id", "Value"), "Select Gender", new { @class = "form-control", id = "Gender" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12">
                            <div class="row">
                                <div class="col-sm-12">
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div class="row mgbt-sm-0">
                                                <label class="col-sm-5">Id Type<span class="text-danger">*</span></label>
                                                <div class="col-sm-7">
                                                    @Html.DropDownListFor(m => m.IdTypeMasterId, new SelectList(Model.IdTypeList, "Id", "Value"), "Select Id Type", new { @class = "form-control", id = "Citizenship" })
                                                    @*@Html.TextBoxFor(model => model.Citizenship, new { @placeholder = "Citizenship", @class = "form-control", id = "Citizenship" })*@
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="row mgbt-sm-0">
                                                <label class="col-sm-5">Country<span class="text-danger">*</span></label>
                                                <div class="col-sm-7">
                                                    @Html.DropDownListFor(m => m.CountryId, new SelectList(Model.CountriesList, "Id", "Value"), "Select Country", new { @class = "form-control", id = "CountryId" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="row mgbt-sm-0">
                                                <label class="col-sm-5">Id Type Copy</label>
                                                <div class="col-sm-7">
                                                    <input type="file" class="form-control" id="CitizenShipIdCopy" new { enctype="multipart/form-data" accept=".png,.jpg,.jpeg,.gif,.pdf,.docx,.doc" }>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="row mgbt-sm-0">
                                                <label class="col-sm-5">Id Type Copy File</label>
                                                <div class="col-sm-7">
                                                    @if (Model != null)
                                                    {
                                                        if (Model.CitizenShipIdCopySavedName != null && Model.CitizenShipIdCopySavedName != "" && Model.CitizenShipIdCopy != null && Model.CitizenShipIdCopy != "")
                                                        {
                                                            @Html.ActionLink(Model.CitizenShipIdCopy, "DownloadCitizenShipIdCopy", new { fileSavedName = Model.CitizenShipIdCopySavedName, fileActualName = Model.CitizenShipIdCopy })
                                                        }
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="row mgbt-sm-0">
                                                <label class="col-sm-5">Email Address<span class="text-danger">*</span></label>
                                                <div class="col-sm-7">
                                                    @Html.TextBoxFor(model => model.EmailAddress, new { @placeholder = "Email Address", @class = "form-control", id = "EmailAddress", @readonly = "readonly" })
                                                    @Html.ValidationMessageFor(model => model.EmailAddress)
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-sm-6">
                                            <div class="row mgbt-sm-0">
                                                <label class="col-sm-5">Phone Number<span class="text-danger">*</span></label>
                                                <div class="col-sm-7">
                                                    @Html.TextBoxFor(model => model.PhoneNumber, new { @placeholder = "Phone Number", @class = "form-control", id = "PhoneNumber", onkeypress = "return isNumberKey(event)" })
                                                    @Html.ValidationMessageFor(model => model.PhoneNumber)
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-sm-6">
                                            <div class="row mgbt-sm-0">
                                                <label class="col-sm-5">Secondary PhoneNumber</label>
                                                <div class="col-sm-7">
                                                    @Html.TextBoxFor(model => model.AlternativePhoneNumber, new { @placeholder = "Phone Number", @class = "form-control", id = "AlternativePhoneNumber", onkeypress = "return isNumberKey(event)" })
                                                    @Html.ValidationMessageFor(model => model.AlternativePhoneNumber)
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-sm-6">
                                            <div class="row mgbt-sm-0">
                                                <label class="col-sm-5">Mother Tongue<span class="text-danger">*</span></label>
                                                <div class="col-sm-7">
                                                    @Html.TextBoxFor(model => model.MotherTongue, new { @placeholder = "Mother Tongue", @class = "form-control", id = "MotherTongue" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="row mgbt-sm-0">
                                                <label class="col-sm-5">Nationality<span class="text-danger">*</span></label>
                                                <div class="col-sm-7">
                                                    @Html.TextBoxFor(model => model.Nationality, new { @placeholder = "Nationality", @class = "form-control", id = "Nationality" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="row mgbt-sm-0">
                                                <label class="col-sm-5">County<span class="text-danger">*</span></label>
                                                <div class="col-sm-7">
                                                    @Html.TextBoxFor(model => model.County, new { @placeholder = "County", @class = "form-control", id = "County" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="row mgbt-sm-0">
                                                <label class="col-sm-5"> Application Letter</label>
                                                <div class="col-sm-7">
                                                    <input type="file" class="form-control" id="ApplicationLetter" new { enctype="multipart/form-data" accept=".png,.jpg,.jpeg,.gif,.pdf,.docx,.doc" }>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="row mgbt-sm-0">
                                                <label class="col-sm-5"> Application Letter File</label>
                                                <div class="col-sm-7">
                                                    @if (Model != null)
                                                    {
                                                        if (Model.ApplicationLetterSavedName != null && Model.ApplicationLetterSavedName != "" && Model.ApplicationLetter != null && Model.ApplicationLetter != "")
                                                        {
                                                            @Html.ActionLink(Model.ApplicationLetter, "DownloadApplicationLetter", new { fileSavedName = Model.ApplicationLetterSavedName, fileActualName = Model.ApplicationLetter })
                                                        }
                                                    }
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-sm-6">
                                            <div class="row mgbt-sm-0">
                                                <label class="col-sm-5"> Curriculum Vitae</label>
                                                <div class="col-sm-7">
                                                    <input type="file" class="form-control" id="Resume" new { enctype="multipart/form-data" accept=".docx,.doc" }>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="row mgbt-sm-0">
                                                <label class="col-sm-5"> Curriculum Vitae File</label>
                                                <div class="col-sm-7">
                                                    @if (Model != null)
                                                    {
                                                        if (Model.CVSavedName != null && Model.CVSavedName != "" && Model.CV != null && Model.CV != "")
                                                        {
                                                            @Html.ActionLink(Model.CV, "DownloadResume", new { fileSavedName = Model.CVSavedName, fileActualName = Model.CV })
                                                        }
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="row mgbt-sm-0">
                                                <label class="col-sm-5">Special Need</label>
                                                <div class="col-sm-7">
                                                    <select id="SpecialNeed" class="form-control">
                                                        <option value="1">Yes</option>
                                                        <option value="2">No</option>
                                                    </select>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-sm-6">
                                            <div class="row mgbt-sm-0">
                                                <div class="col-sm-12">
                                                    @Html.TextBoxFor(model => model.SpecialNeedDetails, new { @placeholder = "SpecialNeed", @class = "form-control", id = "SpecialNeedDetails" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-12">

                                            <label>Windle International Kenya’s selection processes reflect our commitment to a diverse and inclusive environment.</label>

                                        </div>
                                        <div class="col-sm-12">

                                        </div>
                                        <br />
                                        <div class="col-sm-6">
                                            <div class="row mgbt-sm-0">
                                                <label class="col-sm-5">Address<span class="text-danger">*</span></label>
                                                <div class="col-sm-7">
                                                    @Html.TextBoxFor(model => model.Address, new { @placeholder = "Address", @class = "form-control", id = "Address" })
                                                </div>
                                            </div>
                                        </div>
                                        &nbsp;
                                        &nbsp;
                                        <div class="col-sm-12">
                                            <div class="row">
                                                <div class="col-sm-6">
                                                    <div class="row mgbt-sm-0">
                                                        <label class="col-sm-5">Do you know anyone who work in WIK? <span class="text-danger">*</span></label>
                                                        <div class="col-sm-7">
                                                            <select id="AnyoneWorkinWIKId" class="form-control" onchange="OnAnyoneWorkinWIKChange()">
                                                                <option value="">Select</option>
                                                                <option value="1">Yes</option>
                                                                <option value="2">No</option>
                                                            </select>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-sm-6">
                                                    <div class="row mgbt-sm-0">
                                                        <div class="col-sm-6"></div>
                                                        <div class="col-sm-6">
                                                            <button type="button" class="btn btn-success btn-md btn-rounded w-md" id="ApplicantRelationSave" onclick="OnSubmitApplicantRelation()">ADD & Save</button>
                                                            <button type="button" class="btn btn-primary btn-md btn-rounded w-md" id="ApplicantRelationClear" onclick="ClearApplicantRelation()">Clear</button>
                                                        </div>
                                                    </div>
                                                </div>
                                                &nbsp;
                                                &nbsp;
                                                <div class="col-sm-12" id="RelationshipDataGrid">
                                                    <div class="row">
                                                        @Html.HiddenFor(m => m.RelationId)
                                                        <div class="col-sm-12">
                                                            <div class="row">
                                                                <div class="col-sm-6">
                                                                    <div class="row mgbt-sm-0">
                                                                        <label class="col-sm-5">Name<span class="text-danger">*</span></label>
                                                                        <div class="col-sm-7">
                                                                            @Html.TextBoxFor(model => model.RelativeName, new { @placeholder = "Name", @class = "form-control", id = "RelativeName" })
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="col-sm-6">
                                                                    <div class="row mgbt-sm-0">
                                                                        <label class="col-sm-5">Relationship<span class="text-danger">*</span></label>
                                                                        <div class="col-sm-7">
                                                                            @Html.TextBoxFor(model => model.Relationship, new { @placeholder = "Relationship", @class = "form-control", id = "Relationship" })
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                &nbsp;
                                &nbsp;
                                <br />
                                <div class="col-sm-12">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <div class="table-responsive">
                                                <div class="table table-bordered table-striped" id="ApplicantRelationGrid">

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                &nbsp;
                                &nbsp;
                                <div class="col-sm-12">
                                    @Html.HiddenFor(m => m.LanguageSpokenId)
                                    <div class="row">
                                        <table>
                                            <thead>
                                                <tr>
                                                    <th>
                                                        <label class="col-sm-3">Language spoken<span class="text-danger">*</span></label>
                                                    </th>
                                                    <th>
                                                        <label class="col-sm-3">Read<span class="text-danger">*</span></label>
                                                    </th>
                                                    <th>
                                                        <label class="col-sm-3">Write<span class="text-danger">*</span></label>
                                                    </th>
                                                    <th>
                                                        <label class="col-sm-3">Speak<span class="text-danger">*</span></label>
                                                    </th>
                                                    <th>
                                                        <label class="col-sm-3">Understand<span class="text-danger">*</span></label>
                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    <td>
                                                        <div class="col-sm-12">
                                                            @Html.TextBoxFor(model => model.Language, new { @placeholder = "Language", @class = "form-control", id = "Language" })
                                                        </div>
                                                    </td>
                                                    <td>
                                                        <div class="col-sm-12">
                                                            @Html.RadioButtonFor(model => model.LanguageRead, "None", new { id = "LanguageRead" })
                                                            @Html.Label("None", "None") <br />
                                                            @Html.RadioButtonFor(model => model.LanguageRead, "Limited", new { id = "LanguageRead" })
                                                            @Html.Label("Limited", "Limited")<br />
                                                            @Html.RadioButtonFor(model => model.LanguageRead, "Workingknowledge", new { id = "LanguageRead" })
                                                            @Html.Label("Working knowledge", "Working knowledge")<br />
                                                            @Html.RadioButtonFor(model => model.LanguageRead, "Proficient", new { id = "LanguageRead" })
                                                            @Html.Label("Proficient", "Proficient")
                                                        </div>
                                                    </td>
                                                    <td>
                                                        <div class="col-sm-12">
                                                            @Html.RadioButtonFor(model => model.Write, "None", new { id = "Write" })
                                                            @Html.Label("None", "None")<br />
                                                            @Html.RadioButtonFor(model => model.Write, "Limited", new { id = "Write" })
                                                            @Html.Label("Limited", "Limited")<br />
                                                            @Html.RadioButtonFor(model => model.Write, "Workingknowledge", new { id = "Write" })
                                                            @Html.Label("Working knowledge", "Working knowledge")<br />
                                                            @Html.RadioButtonFor(model => model.Write, "Proficient", new { id = "Write" })
                                                            @Html.Label("Proficient", "Proficient")
                                                        </div>
                                                    </td>
                                                    <td>
                                                        <div class="col-sm-12">
                                                            @Html.RadioButtonFor(model => model.Speak, "None", new { id = "Speak" })
                                                            @Html.Label("None", "None")<br />
                                                            @Html.RadioButtonFor(model => model.Speak, "Limited", new { id = "Speak" })
                                                            @Html.Label("Limited", "Limited")<br />
                                                            @Html.RadioButtonFor(model => model.Speak, "Workingknowledge", new { id = "Speak" })
                                                            @Html.Label("Working knowledge", "Working knowledge")<br />
                                                            @Html.RadioButtonFor(model => model.Speak, "Proficient", new { id = "Speak" })
                                                            @Html.Label("Proficient", "Proficient")
                                                        </div>
                                                    </td>
                                                    <td>
                                                        <div class="col-sm-12">
                                                            @Html.RadioButtonFor(model => model.Understand, "None", new { id = "Understand" })
                                                            @Html.Label("None", "None")<br />
                                                            @Html.RadioButtonFor(model => model.Understand, "Limited", new { id = "Understand" })
                                                            @Html.Label("Limited", "Limited")<br />
                                                            @Html.RadioButtonFor(model => model.Understand, "Workingknowledge", new { id = "Understand" })
                                                            @Html.Label("Working knowledge", "Working knowledge")<br />
                                                            @Html.RadioButtonFor(model => model.Understand, "Proficient", new { id = "Understand" })
                                                            @Html.Label("Proficient", "Proficient")
                                                        </div>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                                &nbsp;
                                &nbsp;
                                <div class="col-sm-12">
                                    <div class="row">
                                        <div class="col-sm-9"></div>
                                        <div class="col-sm-3">
                                            <button type="button" class="btn btn-success btn-md btn-rounded w-md" onclick="OnSubmitApplicantLanguage()">ADD & Save</button>
                                            <button type="button" class="btn btn-primary btn-md btn-rounded w-md" onclick="ClearLanguage()">Clear</button>
                                        </div>
                                    </div>
                                </div>
                                &nbsp;
                                &nbsp;
                                <div class="col-sm-12">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <div class="table-responsive">
                                                <div class="table table-bordered table-striped" id="ApplicantLanguageGrid">

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                &nbsp;
                                &nbsp;
                                <div class="col-sm-12">
                                    <div class="row">
                                        <div class="col-sm-9"></div>
                                        <div class="col-sm-3">
                                            <button type="button" class="btn btn-success btn-md btn-rounded w-md" onclick="OnSubmitApplicantPersonalInformation()">Save</button>
                                            @*<button type="button" class="btn btn-primary btn-md btn-rounded w-md" onclick="ClearPersonalInformation()">Clear</button>*@
                                            <button type="button" class="btn btn-secondary btn-md btn-rounded w-md" onclick="OnPersonalInformationNext()">Next</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        &nbsp;
                        &nbsp;
                    </div>

                    <div class="tab-pane fade" id="v-pills-Qualification-tabContent" role="tabpanel" aria-labelledby="v-pills-Qualification-tab">
                        @Html.HiddenFor(m => m.ApplicantQualificationId)
                        <div class="col-lg-12">
                            <div class="row">
                                <div class="col-sm-6">
                                    <div class="row mgbt-sm-0">
                                        <label class="col-sm-5">Academic Qualifications <span class="text-danger">*</span></label>
                                        <div class="col-sm-7" onchange="OnAcademicQualification()">
                                            @Html.DropDownListFor(m => m.AcademicQualificationId, new SelectList(Model.AcademicQualificationsList, "Id", "Value"), "Select Academic Qualifications", new { @class = "form-control", id = "AcademicQualificationId" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="row mgbt-sm-0">
                                        <label class="col-sm-5">Academic Qualification Attachment<span class="text-danger">*</span></label>
                                        <div class="col-sm-7">
                                            <input type="file" class="form-control" id="AcademicQualificationAttachment" new { enctype="multipart/form-data" accept=".pdf,.docx,.doc" }>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="row mgbt-sm-0">
                                        <label class="col-sm-5"></label>
                                        <div class="col-sm-7">
                                            @Html.TextAreaFor(m => m.OtherCertification, new { @placeholder = "Other certification", @class = "input-border-btm form-control", id = "OtherCertification" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="row mgbt-sm-0">
                                        <div class="col-sm-7">
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="row mgbt-sm-0">
                                        <label class="col-sm-5">Start Date<span class="text-danger">*</span> </label>
                                        <div class="col-sm-7">
                                            @Html.TextBoxFor(m => m.QuaStartDate, new { @placeholder = "Start Date", @class = "input-border-btm form-control", id = "QuaStartDate" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="row mgbt-sm-0">
                                        <label class="col-sm-5">End Date<span class="text-danger">*</span></label>
                                        <div class="col-sm-7">
                                            @Html.TextBoxFor(model => model.QuaEndDate, new { @placeholder = "End Date", @class = "input-border-btm form-control", id = "QuaEndDate" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="row mgbt-sm-0">
                                        <label class="col-sm-5">Discipline<span class="text-danger">*</span></label>
                                        <div class="col-sm-7">
                                            @Html.TextBoxFor(model => model.Discipline, new { @placeholder = "Discipline", @class = "form-control", id = "Discipline" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="row mgbt-sm-0">
                                        <label class="col-sm-5">University<span class="text-danger">*</span></label>
                                        <div class="col-sm-7">
                                            @Html.TextBoxFor(model => model.University, new { @placeholder = "University", @class = "form-control", id = "University" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="row mgbt-sm-0">
                                        <label class="col-sm-5">Country</label>
                                        <div class="col-sm-7">
                                            @Html.DropDownListFor(m => m.QuaCountryId, new SelectList(Model.CountriesList, "Id", "Value"), "Select Country", new { @class = "form-control", id = "QuaCountryId" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="row mgbt-sm-0">
                                        <label class="col-sm-5">Credit/Score/Class<span class="text-danger"></span></label>
                                        <div class="col-sm-7">
                                            @Html.TextBoxFor(model => model.Class, new { @placeholder = "Credit/Score/Class", @class = "form-control", id = "Class" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            &nbsp;
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="col-sm-9"></div>
                                    <div class="col-sm-3">
                                        <button type="button" class="btn btn-success btn-md btn-rounded w-md" onclick="OnSubmitApplicantQualification();">Save</button>
                                        <button type="button" class="btn btn-primary btn-md btn-rounded w-md" onclick="ClearQualificationDetails();">Clear</button>
                                    </div>
                                </div>
                            </div>
                            &nbsp;
                            &nbsp;
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="table-responsive">
                                        <div class="table table-bordered table-striped" id="ApplicantQualificationDetails">

                                        </div>
                                    </div>
                                </div>
                            </div>
                            &nbsp;
                            &nbsp;
                            <div class="row">
                                <div class="col-lg-12">
                                    @Html.HiddenFor(m => m.ApplicantMotivationId)
                                    <div class="row">
                                        <div class="col-lg-9"><h4> <i class="mdi mdi-account-multiple"></i> Professional Body Membership</h4></div>
                                        <div class="col-lg-3">
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div class="row mgbt-sm-0">
                                                <label class="col-sm-5">Professional body Membership ? </label>
                                                <div class="col-sm-7">
                                                    @if (Model.Membership == 1)
                                                    {
                                                        <select id="Membership" class="form-control" onchange="OnMembershipChange();">
                                                            <option value="0">No</option>
                                                            <option value="1" selected="selected">Yes</option>
                                                        </select>
                                                    }
                                                    else
                                                    {
                                                        <select id="Membership" class="form-control" onchange="OnMembershipChange();">
                                                            <option value="0" selected="selected">No</option>
                                                            <option value="1">Yes</option>
                                                        </select>
                                                    }

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div id="MembershipData">
                                            <div class="col-sm-12">
                                                <div class="row">
                                                    <div class="col-sm-6">
                                                        <div class="row mgbt-sm-0">
                                                            <label class="col-sm-5">Name of Professional body<span class="text-danger">*</span></label>
                                                            <div class="col-sm-7">
                                                                @Html.TextBoxFor(model => model.NameofProfessionalBody, new { @placeholder = "Name of Professional body", @class = "form-control", id = "NameofProfessionalBody" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-6">
                                                        <div class="row mgbt-sm-0">
                                                            <label class="col-sm-5">Membership Number<span class="text-danger">*</span></label>
                                                            <div class="col-sm-7">
                                                                @Html.TextBoxFor(model => model.MembershipNumber, new { @placeholder = "Membership Number", @class = "form-control", id = "MembershipNumber" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-6">
                                                        <div class="row mgbt-sm-0">
                                                            <label class="col-sm-5">Validity of Membership<span class="text-danger">*</span></label>
                                                            <div class="col-sm-7">
                                                                @if (Model.Validity == 1)
                                                                {
                                                                    <select id="Validity" class="form-control">
                                                                        <option value="">Please choose an option</option>
                                                                        <option value="1" selected="selected">Valid </option>
                                                                        <option value="2">Expired</option>
                                                                    </select>
                                                                }
                                                                else
                                                                {
                                                                    <select id="Validity" class="form-control">
                                                                        <option value="">Please choose an option</option>
                                                                        <option value="1">Valid </option>
                                                                        <option value="2" selected="selected">Expired</option>
                                                                    </select>
                                                                }
                                                                @*<select id="Validity" class="form-control">
                                                                        <option value="">Please choose an option</option>
                                                                        <option value="1">Valid </option>
                                                                        <option value="2">Expired</option>
                                                                    </select>*@
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            &nbsp;
                            &nbsp;
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="col-sm-9"></div>
                                    <div class="col-sm-3">
                                        <button type="button" class="btn btn-primary btn-md btn-rounded w-md" onclick="OnQualificationPrevious()">Previous</button>
                                        <button type="button" class="btn btn-secondary btn-md btn-rounded w-md" onclick="OnSubmitMembershipData()">Save & Next</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        &nbsp;
                        &nbsp;
                    </div>

                    <div class="tab-pane fade" id="v-pills-EmploymentHistory-tabContent" role="tabpanel" aria-labelledby="v-pills-EmploymentHistory-tab">
                        @Html.HiddenFor(m => m.EmploymentHistoryId)
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="col-sm-6">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-5">Employer Name <span class="text-danger">*</span></label>
                                            <div class="col-sm-7">
                                                @Html.TextBoxFor(model => model.EmployerName, new { @placeholder = "EmployerName", @class = "form-control", id = "EmployerName" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-5">Type Of Industry <span class="text-danger">*</span></label>
                                            <div class="col-sm-7">
                                                @Html.DropDownListFor(m => m.TypeOfIndustryId, new SelectList(Model.TypeOfIndustryList, "Id", "Value"), "Select Type Of Industry", new { @class = "form-control", id = "TypeOfIndustryId" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-5">Telephone Number</label>
                                            <div class="col-sm-7">
                                                @Html.TextBoxFor(model => model.TelephoneNo, new { @placeholder = "Telephone Number", @class = "form-control", id = "TelephoneNumber", onkeypress = "return isNumberKey(event)" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-5">Job Title<span class="text-danger">*</span></label>
                                            <div class="col-sm-7">
                                                @Html.TextBoxFor(model => model.JobTitle, new { @placeholder = "Job Title", @class = "form-control", id = "JobTitle" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-5">Title Of Supervisor</label>
                                            <div class="col-sm-7">
                                                @Html.TextBoxFor(model => model.TitleOfSupervisor, new { @placeholder = "Title Of Supervisor", @class = "form-control", id = "TitleOfSupervisor" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-5">Start Date<span class="text-danger">*</span> </label>
                                            <div class="col-sm-7">
                                                @Html.TextBoxFor(m => m.EmpStartDate, new { @placeholder = "Start Date", @class = "input-border-btm form-control", id = "EmpStartDate" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-5">End Date<span class="text-danger">*</span></label>
                                            <div class="col-sm-7">
                                                @Html.TextBoxFor(model => model.EmpEndDate, new { @placeholder = "End Date", @class = "input-border-btm form-control", id = "EmpEndDate" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-5">Responsibilities held<span class="text-danger">*</span></label>
                                            <div class="col-sm-7">
                                                @Html.TextBoxFor(model => model.Responsibility, new { @placeholder = "Responsibility", @class = "form-control", id = "Responsibility" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-5">Notice Period<span class="text-danger"></span></label>
                                            <div class="col-sm-7">
                                                @Html.TextBoxFor(model => model.NoticePeriod, new { @placeholder = "Notice Period", @class = "form-control", id = "NoticePeriod" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-6">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-5">City</label>
                                            <div class="col-sm-7">
                                                @Html.TextBoxFor(model => model.City, new { @placeholder = "City", @class = "form-control", id = "City" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-5">Monthly Salary</label>
                                            <div class="col-sm-7">
                                                @Html.TextBoxFor(model => model.MonthlySalary, new { @placeholder = "Monthly Salary", @class = "form-control", id = "MonthlySalary" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-6">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-5">Are you applying for the position of a Teacher</label>
                                            <div class="col-sm-7">
                                                <select id="SubjectCombinations" class="form-control" onchange="OnSubjectChange();">
                                                    <option value="">Select</option>
                                                    <option value="1">No</option>
                                                    <option value="2">Yes</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-5">Reason for leaving<span class="text-danger">*</span></label>
                                            <div class="col-sm-7">
                                                @Html.TextAreaFor(model => model.Reasonforleaving, new { @placeholder = "Reason for leaving", @class = "form-control", id = "Reasonforleaving" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6" id="txtSubject">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-5">Subject Combination</label>
                                            <div class="col-sm-7">
                                                @Html.TextBoxFor(model => model.Subject, new { @placeholder = "Subject", @class = "form-control", id = "Subject" })
                                            </div>
                                        </div>
                                    </div>
                                </div>


                                &nbsp;
                                &nbsp;
                                <div class="col-sm-12">
                                    <div class="row">
                                        <div class="col-sm-9"></div>
                                        <div class="col-sm-3">
                                            <button type="button" class="btn btn-success btn-md btn-rounded w-md" onclick="OnSubmitEmploymentHistory();">ADD & Save</button>
                                            <button type="button" class="btn btn-primary btn-md btn-rounded w-md" onclick="ClearEmploymentHistoryDetails();">Clear</button>
                                        </div>
                                    </div>
                                </div>
                                &nbsp;
                                &nbsp;
                                <div class="col-sm-12">
                                    <div class="row">
                                        <div class="table-responsive">
                                            <div class="table table-bordered table-striped" id="EmploymentHistoryDetailsList">

                                            </div>
                                        </div>
                                    </div>
                                </div>
                                &nbsp;
                                &nbsp;
                                <div class="col-sm-12">
                                    <div class="row">
                                        <div class="col-sm-9"></div>
                                        <div class="col-sm-3">
                                            <button type="button" class="btn btn-primary btn-md btn-rounded w-md" onclick="OnEmploymentPrevious();">Previous</button>
                                            <button type="button" class="btn btn-secondary btn-md btn-rounded w-md" onclick="OnEmploymentNext();">Next</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        @*<div class="pd-10">
                                <div class="row">
                                    <div class="col-lg-9"><h3> <i class="mdi mdi-account-multiple"></i>  Refered By</h3></div>
                                    <div class="col-lg-3">
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12">
                                        @Html.HiddenFor(m => m.RefereesId)
                                        <div class="row">
                                            <div class="col-sm-6">
                                                <div class="row mgbt-sm-0">
                                                    <label class="col-sm-5">First Name</label>
                                                    <div class="col-sm-7">
                                                        @Html.TextBoxFor(model => model.EmpFirstName, new { @placeholder = "First Name", @class = "form-control", id = "EmpFirstName" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-6">
                                                <div class="row mgbt-sm-0">
                                                    <label class="col-sm-5">Second Name </label>
                                                    <div class="col-sm-7">
                                                        @Html.TextBoxFor(model => model.SecondName, new { @placeholder = "Second Name", @class = "form-control", id = "SecondName" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-6">
                                                <div class="row mgbt-sm-0">
                                                    <label class="col-sm-5">Position</label>
                                                    <div class="col-sm-7">
                                                        @Html.TextBoxFor(model => model.Position, new { @placeholder = "Position", @class = "form-control", id = "Position" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-6">
                                                <div class="row mgbt-sm-0">
                                                    <label class="col-sm-5">RelationShip</label>
                                                    <div class="col-sm-7">
                                                        @Html.TextBoxFor(model => model.RelationshipTOApplicant, new { @placeholder = "RelationshipTOApplicant", @class = "form-control", id = "RelationshipTOApplicant" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-6">
                                                <div class="row mgbt-sm-0">
                                                    <label class="col-sm-5">Organization</label>
                                                    <div class="col-sm-7">
                                                        @Html.TextBoxFor(model => model.NameOfTheOrganization, new { @placeholder = "NameOfTheOrganization", @class = "form-control", id = "NameOfTheOrganization" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-6">
                                                <div class="row mgbt-sm-0">
                                                    <label class="col-sm-5">Telephone Contact </label>
                                                    <div class="col-sm-7">
                                                        @Html.TextBoxFor(model => model.TelephoneContact, new { @placeholder = "Telephone Contact", @class = "form-control", id = "TelephoneContact", onkeypress = "return isNumberKey(event)" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-6">
                                                <div class="row mgbt-sm-0">
                                                    <label class="col-sm-5">Email Address </label>
                                                    <div class="col-sm-7">
                                                        @Html.TextBoxFor(m => m.EmpEmailAddress, new { @placeholder = "Email Address", @class = "input-border-btm form-control", id = "EmpEmailAddress" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                &nbsp;
                                &nbsp;
                                <div class="col-sm-12">
                                    <div class="row">
                                        <div class="col-sm-9"></div>
                                        <div class="col-sm-3">
                                            <button type="button" class="btn btn-success btn-md btn-rounded w-md" onclick="OnSubmitReferees();"> ADD & Save</button>
                                            <button type="button" class="btn btn-primary btn-md btn-rounded w-md" onclick="ClearRefereesDetails();">Clear</button>
                                        </div>
                                    </div>
                                </div>
                                &nbsp;
                                &nbsp;
                                <div class="col-sm-12">
                                    <div class="row">
                                        <div class="table-responsive">
                                            <div class="table table-bordered table-striped" id="RefereesGrid">

                                            </div>
                                        </div>
                                    </div>
                                </div>
                                &nbsp;
                                &nbsp;
                                <div class="col-sm-12">
                                    <div class="row">
                                        <div class="col-sm-9"></div>
                                        <div class="col-sm-3">
                                            <button type="button" class="btn btn-primary btn-md btn-rounded w-md" onclick="OnEmploymentPrevious();">Previous</button>
                                            <button type="button" class="btn btn-secondary btn-md btn-rounded w-md" onclick="OnEmploymentNext();">Next</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            &nbsp;
                            &nbsp;*@
                        &nbsp;
                        &nbsp;
                    </div>

                    <div class="tab-pane fade" id="v-pills-MotivationSkills-tabContent" role="tabpanel" aria-labelledby="v-pills-MotivationSkills-tab">
                        @Html.HiddenFor(m => m.ApplicantMotivationId)
                        @*<div class="col-lg-12">
                                <div class="row">
                                    <div class="col-lg-9"><h4> <i class="mdi mdi-account-multiple"></i> Professional Body Membership</h4></div>
                                    <div class="col-lg-3">
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-6">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-5">Professional body Membership ? </label>
                                            <div class="col-sm-7">
                                                @if (Model.Membership == 1)
                                                {
                                                    <select id="Membership" class="form-control" onchange="OnMembershipChange();">
                                                        <option value="0">No</option>
                                                        <option value="1" selected="selected">Yes</option>
                                                    </select>
                                                }
                                                else
                                                {
                                                    <select id="Membership" class="form-control" onchange="OnMembershipChange();">
                                                        <option value="0" selected="selected">No</option>
                                                        <option value="1">Yes</option>
                                                    </select>
                                                }

                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div id="MembershipData">
                                        <div class="col-sm-12">
                                            <div class="row">
                                                <div class="col-sm-6">
                                                    <div class="row mgbt-sm-0">
                                                        <label class="col-sm-5">Name of Professional body<span class="text-danger">*</span></label>
                                                        <div class="col-sm-7">
                                                            @Html.TextBoxFor(model => model.NameofProfessionalBody, new { @placeholder = "Name of Professional body", @class = "form-control", id = "NameofProfessionalBody" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-sm-6">
                                                    <div class="row mgbt-sm-0">
                                                        <label class="col-sm-5">Membership Number<span class="text-danger">*</span></label>
                                                        <div class="col-sm-7">
                                                            @Html.TextBoxFor(model => model.MembershipNumber, new { @placeholder = "Membership Number", @class = "form-control", id = "MembershipNumber" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-sm-6">
                                                    <div class="row mgbt-sm-0">
                                                        <label class="col-sm-5">Validity of Membership<span class="text-danger">*</span></label>
                                                        <div class="col-sm-7">
                                                            <select id="Validity" class="form-control">
                                                                <option value="">Please choose an option</option>
                                                                <option value="1">Valid </option>
                                                                <option value="2">Expired</option>
                                                            </select>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            &nbsp;*@
                        <div class="col-lg-12">
                            <div class="row">
                                <div class="col-lg-9"><h4> <i class="mdi mdi-account-multiple"></i> Motivation Skills & Experience</h4></div>
                                <div class="col-lg-3">
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-12">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <div class="row mgbt-sm-0">
                                                <label class="col-sm-5">Please give details of why you are applying for this role and how you can demonstrate the skills outlined in the description ? <span class="text-danger">*</span></label>
                                                <div class="col-sm-7">
                                                    @Html.TextAreaFor(model => model.JobDescription, new { @class = "form-control", id = "JobDescription" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-12">
                                            <div class="row">
                                                <div class="col-lg-10"><i class="mdi mdi-account-multiple"></i> <b>How did you learn about the vacancy</b></div>
                                                <div class="col-lg-2">
                                                </div>
                                            </div>
                                            <div class="col-lg-6">
                                                <div class="row">
                                                    <div class="col-sm-12">
                                                        <div class="row mgbt-sm-0">
                                                            <label class="col-sm-5">Referer<span class="text-danger">*</span></label>
                                                            <div class="col-sm-7" onchange="OnchangeRefererId()">
                                                                @Html.DropDownListFor(m => m.RefererId, new SelectList(Model.RefererList, "Id", "Value"), "Select Referer", new { @class = "form-control", id = "Referer" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-sm-12">
                                                        <div class="row mgbt-sm-0">
                                                            <label class="col-sm-5"></label>
                                                            <div class="col-sm-7">
                                                                @Html.TextAreaFor(model => model.Others, new { @placeholder = "Others", @class = "form-control", id = "Others" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        &nbsp;
                        <div class="col-lg-12">
                            <div class="row">
                                <div class="col-lg-9"><h4> <i class="mdi mdi-account-multiple"></i> Application Note </h4></div>
                                <div class="col-lg-3">
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-12">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <div class="row mgbt-sm-0">
                                                <label class="col-sm-5">Would you accept employment for less than 6 months? </label>
                                                <div class="col-sm-7" id="ApplicationNote">
                                                    @Html.RadioButtonFor(model => model.ApplicationNote, "Yes", new { id = "ApplicationNote" })
                                                    @Html.Label("Yes", "Yes")
                                                    @Html.RadioButtonFor(model => model.ApplicationNote, "No", new { id = "ApplicationNote" })
                                                    @Html.Label("No", "No")
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12">
                            <div class="row">
                                <div class="col-sm-7"></div>
                                <div class="col-sm-5">
                                    <button type="button" class="btn btn-primary btn-md btn-rounded w-md" onclick="OnMotivationSkillsPrevious();">Previous</button>
                                    <button type="button" class="btn btn-success btn-md btn-rounded w-md" onclick="OnSubmitMotivationSkills();">Save</button>
                                    @*<button type="button" class="btn btn-primary btn-md btn-rounded" onclick="ClearMotivationSkills();">Clear</button>*@
                                    <button type="button" class="btn btn-secondary btn-md btn-rounded w-md" onclick="OnMotivationSkillsNext();">Next</button>
                                </div>
                            </div>
                        </div>
                        &nbsp;
                        &nbsp;
                    </div>

                    <div class="tab-pane fade" id="v-pills-Referees-tabContent" role="tabpanel" aria-labelledby="v-pills-Referees-tab">
                        <div class="row">
                            <div class="col-sm-12">
                                @Html.HiddenFor(m => m.RefereesId)
                                <div class="row">
                                    <div class="col-sm-6">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-5">First Name<span class="text-danger">*</span></label>
                                            <div class="col-sm-7">
                                                @Html.TextBoxFor(model => model.EmpFirstName, new { @placeholder = "First Name", @class = "form-control", id = "EmpFirstName" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-5">Second Name<span class="text-danger">*</span> </label>
                                            <div class="col-sm-7">
                                                @Html.TextBoxFor(model => model.SecondName, new { @placeholder = "Second Name", @class = "form-control", id = "SecondName" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-5">Position<span class="text-danger">*</span></label>
                                            <div class="col-sm-7">
                                                @Html.TextBoxFor(model => model.Position, new { @placeholder = "Position", @class = "form-control", id = "Position" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-5">Relationship<span class="text-danger">*</span></label>
                                            <div class="col-sm-7">
                                                @Html.TextBoxFor(model => model.RelationshipTOApplicant, new { @placeholder = "RelationshipTOApplicant", @class = "form-control", id = "RelationshipTOApplicant" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-5">Organization<span class="text-danger">*</span></label>
                                            <div class="col-sm-7">
                                                @Html.TextBoxFor(model => model.NameOfTheOrganization, new { @placeholder = "NameOfTheOrganization", @class = "form-control", id = "NameOfTheOrganization" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-5">Telephone Contact<span class="text-danger">*</span> </label>
                                            <div class="col-sm-7">
                                                @Html.TextBoxFor(model => model.TelephoneContact, new { @placeholder = "Telephone Contact", @class = "form-control", id = "TelephoneContact", onkeypress = "return isNumberKey(event)" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-5">Email Address<span class="text-danger">*</span> </label>
                                            <div class="col-sm-7">
                                                @Html.TextBoxFor(m => m.EmpEmailAddress, new { @placeholder = "Email Address", @class = "input-border-btm form-control", id = "EmpEmailAddress" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        &nbsp;
                        &nbsp;
                        <div class="col-sm-12">
                            <div class="row">
                                <div class="col-sm-9"></div>
                                <div class="col-sm-3">
                                    <button type="button" class="btn btn-success btn-md btn-rounded w-md" onclick="OnSubmitReferees();"> ADD & Save</button>
                                    <button type="button" class="btn btn-primary btn-md btn-rounded w-md" onclick="ClearRefereesDetails();">Clear</button>
                                </div>
                            </div>
                        </div>
                        &nbsp;
                        &nbsp;
                        <div class="col-sm-12">
                            <div class="row">
                                <div class="table-responsive">
                                    <div class="table table-bordered table-striped" id="RefereesGrid">

                                    </div>
                                </div>
                            </div>
                        </div>
                        &nbsp;
                        &nbsp;
                        <div class="col-sm-12">
                            <div class="row">
                                <div class="col-sm-9"></div>
                                <div class="col-sm-3">
                                    <button type="button" class="btn btn-primary btn-md btn-rounded w-md" onclick="OnRefereesPrevious();">Previous</button>
                                    <button type="button" class="btn btn-secondary btn-md btn-rounded w-md" onclick="OnRefereesNext();">Next</button>
                                </div>
                            </div>
                        </div>
                        &nbsp;
                        &nbsp;
                    </div>

                    <div class="tab-pane fade" id="v-pills-Declaration-tabContent" role="tabpanel" aria-labelledby="v-pills-Declaration-tab">
                        @Html.HiddenFor(m => m.DeclarationID)
                        <div class="col-lg-12">
                            <div class="row">
                                <div class="col-lg-9"><h4> Section 1) Employment History</h4></div>
                                <div class="col-lg-3">
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-7">Has your employment ever been terminated by any organization for any reason? </label>
                                            <div class="col-sm-5" onchange="OnTerminatedIdChange()">
                                                @if (@Model.TerminatedId == "Yes")
                                                {
                                                    @Html.RadioButtonFor(model => model.TerminatedId, "Yes", new { id = "TerminatedId", @checked = true })
                                                    @Html.Label("Yes", "Yes")
                                                    @Html.RadioButtonFor(model => model.TerminatedId, "No", new { id = "TerminatedId" })
                                                    @Html.Label("No", "No")
                                                }
                                                else
                                                {
                                                    @Html.RadioButtonFor(model => model.TerminatedId, "Yes", new { id = "TerminatedId" })
                                                    @Html.Label("Yes", "Yes")
                                                    @Html.RadioButtonFor(model => model.TerminatedId, "No", new { id = "TerminatedId", @checked = true })
                                                    @Html.Label("No", "No")
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">
                                        <div class="row mgbt-sm-0">
                                            <div class="col-sm-12">
                                                @Html.TextAreaFor(model => model.Terminatation, new { @class = "form-control", id = "Terminatation", @readonly = "true" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-7">Are you currently, or have you ever been, the subject of an investigation or any other process into suspected or alleged misconduct? </label>
                                            <div class="col-sm-5" onchange="OnMisconductIdChange()">
                                                @if (@Model.MisconductId == "Yes")
                                                {
                                                    @Html.RadioButtonFor(model => model.MisconductId, "Yes", new { id = "MisconductId", @checked = true })
                                                    @Html.Label("Yes", "Yes")
                                                    @Html.RadioButtonFor(model => model.MisconductId, "No", new { id = "MisconductId" })
                                                    @Html.Label("No", "No")
                                                }
                                                else
                                                {
                                                    @Html.RadioButtonFor(model => model.MisconductId, "Yes", new { id = "MisconductId" })
                                                    @Html.Label("Yes", "Yes")
                                                    @Html.RadioButtonFor(model => model.MisconductId, "No", new { id = "MisconductId", @checked = true })
                                                    @Html.Label("No", "No")
                                                }

                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">
                                        <div class="row mgbt-sm-0">
                                            <div class="col-sm-12">
                                                @Html.TextAreaFor(model => model.Misconduct, new { @class = "form-control", id = "Misconduct", @readonly = "true" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-7">Are you currently, or have you ever been, the subject or an investigation or any other process relating to alleged unsatisfactory performance, where you participating in a formal performance management process? </label>
                                            <div class="col-sm-5" onchange="OnManagementIdChange()">
                                                @if (@Model.ManagementId == "Yes")
                                                {
                                                    @Html.RadioButtonFor(model => model.ManagementId, "Yes", new { id = "ManagementId", @checked = true })
                                                    @Html.Label("Yes", "Yes")
                                                    @Html.RadioButtonFor(model => model.ManagementId, "No", new { id = "ManagementId" })
                                                    @Html.Label("No", "No")
                                                }
                                                else
                                                {
                                                    @Html.RadioButtonFor(model => model.ManagementId, "Yes", new { id = "ManagementId" })
                                                    @Html.Label("Yes", "Yes")
                                                    @Html.RadioButtonFor(model => model.ManagementId, "No", new { id = "ManagementId", @checked = true })
                                                    @Html.Label("No", "No")
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">
                                        <div class="row mgbt-sm-0">
                                            <div class="col-sm-12">
                                                @Html.TextAreaFor(model => model.Management, new { @class = "form-control", id = "Management", @readonly = "true" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-7">Have you ever been a subject of an investigation into suspected or alleged misconduct by you or been the subject of allegations of misconduct during previous employment where such investigation or disciplinary process was not completed including by reason that your employment ended prior to the completion of the investigation process? </label>
                                            <div class="col-sm-5" onchange="OnInvestigationIdChange()">
                                                @if (@Model.InvestigationId == "Yes")
                                                {
                                                    @Html.RadioButtonFor(model => model.InvestigationId, "Yes", new { id = "InvestigationId", @checked = true })
                                                    @Html.Label("Yes", "Yes")
                                                    @Html.RadioButtonFor(model => model.InvestigationId, "No", new { id = "InvestigationId" })
                                                    @Html.Label("No", "No")
                                                }
                                                else
                                                {
                                                    @Html.RadioButtonFor(model => model.InvestigationId, "Yes", new { id = "InvestigationId" })
                                                    @Html.Label("Yes", "Yes")
                                                    @Html.RadioButtonFor(model => model.InvestigationId, "No", new { id = "InvestigationId", @checked = true })
                                                    @Html.Label("No", "No")
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">
                                        <div class="row mgbt-sm-0">
                                            <div class="col-sm-12">
                                                @Html.TextAreaFor(model => model.Investigation, new { @class = "form-control", id = "Investigation", @readonly = "true" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-9"><h4>Section 2) Criminal History / Code of Conduct</h4></div>
                                <div class="col-lg-3">
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-7">Are you currently facing charges, yet to be determined, for any criminal offence? </label>
                                            <div class="col-sm-5" onchange="OnCriminalOffenceIdChange()">
                                                @if (@Model.CriminalOffenceId == "Yes")
                                                {
                                                    @Html.RadioButtonFor(model => model.CriminalOffenceId, "Yes", new { id = "CriminalOffenceId", @checked = true })
                                                    @Html.Label("Yes", "Yes")
                                                    @Html.RadioButtonFor(model => model.CriminalOffenceId, "No", new { id = "CriminalOffenceId" })
                                                    @Html.Label("No", "No")}
                                                else
                                                {
                                                    @Html.RadioButtonFor(model => model.CriminalOffenceId, "Yes", new { id = "CriminalOffenceId" })
                                                    @Html.Label("Yes", "Yes")
                                                    @Html.RadioButtonFor(model => model.CriminalOffenceId, "No", new { id = "CriminalOffenceId", @checked = true })
                                                    @Html.Label("No", "No")
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">
                                        <div class="row mgbt-sm-0">
                                            <div class="col-sm-12">
                                                @Html.TextAreaFor(model => model.CriminalOffence, new { @class = "form-control", id = "CriminalOffence", @readonly = "true" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-7">Have you ever been investigated, arrested, reported for or pleaded or found guilty of any criminal offences, including any road traffic offences or convictions that were not recorded?	</label>
                                            <div class="col-sm-5" onchange="OnConvictionsIdChange()">
                                                @if (@Model.ConvictionsId == "Yes")
                                                {
                                                    @Html.RadioButtonFor(model => model.ConvictionsId, "Yes", new { id = "ConvictionsId", @checked = true })
                                                    @Html.Label("Yes", "Yes")
                                                    @Html.RadioButtonFor(model => model.ConvictionsId, "No", new { id = "ConvictionsId" })
                                                    @Html.Label("No", "No")
                                                }
                                                else
                                                {
                                                    @Html.RadioButtonFor(model => model.ConvictionsId, "Yes", new { id = "ConvictionsId" })
                                                    @Html.Label("Yes", "Yes")
                                                    @Html.RadioButtonFor(model => model.ConvictionsId, "No", new { id = "ConvictionsId", @checked = true })
                                                    @Html.Label("No", "No")
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">
                                        <div class="row mgbt-sm-0">
                                            <div class="col-sm-12">
                                                @Html.TextAreaFor(model => model.Convictions, new { @class = "form-control", id = "Convictions", @readonly = "true" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-7">Have you, singly or with others been adjudged by a court of law in for any fraud, corruption or other misconduct?</label>
                                            <div class="col-sm-5" onchange="OnCorruptionIdChange()">
                                                @if (@Model.CorruptionId == "Yes")
                                                {
                                                    @Html.RadioButtonFor(model => model.CorruptionId, "Yes", new { id = "CorruptionId", @checked = true })
                                                    @Html.Label("Yes", "Yes")
                                                    @Html.RadioButtonFor(model => model.CorruptionId, "No", new { id = "CorruptionId" })
                                                    @Html.Label("No", "No")
                                                }
                                                else
                                                {
                                                    @Html.RadioButtonFor(model => model.CorruptionId, "Yes", new { id = "CorruptionId" })
                                                    @Html.Label("Yes", "Yes")
                                                    @Html.RadioButtonFor(model => model.CorruptionId, "No", new { id = "CorruptionId", @checked = true })
                                                    @Html.Label("No", "No")
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">
                                        <div class="row mgbt-sm-0">
                                            <div class="col-sm-12">
                                                @Html.TextAreaFor(model => model.Corruption, new { @class = "form-control", id = "Corruption", @readonly = "true" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-7">Have you ever been the subject of a disciplinary hearing by a professional body (i.e. TSC, IHRM, ICPAK, KISM, IPOA)  </label>
                                            <div class="col-sm-5" onchange="OnDisciplinaryIdChange()">
                                                @if (@Model.DisciplinaryId == "Yes")
                                                {
                                                    @Html.RadioButtonFor(model => model.DisciplinaryId, "Yes", new { id = "DisciplinaryId", @checked = true })
                                                    @Html.Label("Yes", "Yes")
                                                    @Html.RadioButtonFor(model => model.DisciplinaryId, "No", new { id = "DisciplinaryId" })
                                                    @Html.Label("No", "No")
                                                }
                                                else
                                                {
                                                    @Html.RadioButtonFor(model => model.DisciplinaryId, "Yes", new { id = "DisciplinaryId" })
                                                    @Html.Label("Yes", "Yes")
                                                    @Html.RadioButtonFor(model => model.DisciplinaryId, "No", new { id = "DisciplinaryId", @checked = true })
                                                    @Html.Label("No", "No")
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">
                                        <div class="row mgbt-sm-0">
                                            <div class="col-sm-12">
                                                @Html.TextAreaFor(model => model.Disciplinary, new { @class = "form-control", id = "Disciplinary", @readonly = "true" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-7">Have you ever been the subject of allegations of conduct by you of a violent and/or sexual nature towards or in relation to a child or children (person under 18 years of age)? </label>
                                            <div class="col-sm-5" onchange="OnRelationToChildIdChange()">
                                                @if (@Model.RelationToChildId == "Yes")
                                                {
                                                    @Html.RadioButtonFor(model => model.RelationToChildId, "Yes", new { id = "RelationToChildId", @checked = true })
                                                    @Html.Label("Yes", "Yes")
                                                    @Html.RadioButtonFor(model => model.RelationToChildId, "No", new { id = "RelationToChildId" })
                                                    @Html.Label("No", "No")
                                                }
                                                else
                                                {
                                                    @Html.RadioButtonFor(model => model.RelationToChildId, "Yes", new { id = "RelationToChildId" })
                                                    @Html.Label("Yes", "Yes")
                                                    @Html.RadioButtonFor(model => model.RelationToChildId, "No", new { id = "RelationToChildId", @checked = true })
                                                    @Html.Label("No", "No")
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">
                                        <div class="row mgbt-sm-0">
                                            <div class="col-sm-12">
                                                @Html.TextAreaFor(model => model.RelationToChild, new { @class = "form-control", id = "RelationToChild", @readonly = "true" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-7">Have you ever been the subject of allegations of conduct by you of a violent and/or sexual nature towards or in relation to an adult person (over 18 years of age)?  </label>
                                            <div class="col-sm-5" onchange="OnRelationToAdultIdChange()">
                                                @if (@Model.RelationToAdultId == "Yes")
                                                {
                                                    @Html.RadioButtonFor(model => model.RelationToAdultId, "Yes", new { id = "RelationToAdultId", @checked = true })
                                                    @Html.Label("Yes", "Yes")
                                                    @Html.RadioButtonFor(model => model.RelationToAdultId, "No", new { id = "RelationToAdultId" })
                                                    @Html.Label("No", "No")
                                                }
                                                else
                                                {
                                                    @Html.RadioButtonFor(model => model.RelationToAdultId, "Yes", new { id = "RelationToAdultId" })
                                                    @Html.Label("Yes", "Yes")
                                                    @Html.RadioButtonFor(model => model.RelationToAdultId, "No", new { id = "RelationToAdultId", @checked = true })
                                                    @Html.Label("No", "No")
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">
                                        <div class="row mgbt-sm-0">
                                            <div class="col-sm-12">
                                                @Html.TextAreaFor(model => model.RelationToAdult, new { @class = "form-control", id = "RelationToAdult", @readonly = "true" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-9"><h4>Section 3) Conflict of Interest</h4></div>
                                <div class="col-lg-3">
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-7">Is any member of the interview panel leading to this employment a relative or personal friend to you? 	</label>
                                            <div class="col-sm-5" onchange="OnRelativeIdChange()">
                                                @Html.RadioButtonFor(model => model.RelativeId, "Yes", new { id = "RelativeId" })
                                                @Html.Label("Yes", "Yes")
                                                @Html.RadioButtonFor(model => model.RelativeId, "No", new { id = "RelativeId" })
                                                @Html.Label("No", "No")
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">
                                        <div class="row mgbt-sm-0">
                                            <label class="col-sm-7">Do you, your family members, close relatives or personal friends have any direct or indirect interest in any company that has business dealings with WIK?</label>
                                            <div class="col-sm-5" onchange="OnDealingsWithWIKIdChange()">
                                                @if (@Model.DealingsWithWIKId == "Yes")
                                                {
                                                    @Html.RadioButtonFor(model => model.DealingsWithWIKId, "Yes", new { id = "DealingsWithWIKId", @checked = true })
                                                    @Html.Label("Yes", "Yes")
                                                    @Html.RadioButtonFor(model => model.DealingsWithWIKId, "No", new { id = "DealingsWithWIKId" })
                                                    @Html.Label("No", "No")
                                                }
                                                else
                                                {
                                                    @Html.RadioButtonFor(model => model.DealingsWithWIKId, "Yes", new { id = "DealingsWithWIKId" })
                                                    @Html.Label("Yes", "Yes")
                                                    @Html.RadioButtonFor(model => model.DealingsWithWIKId, "No", new { id = "DealingsWithWIKId", @checked = true })
                                                    @Html.Label("No", "No")
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">
                                        <div class="row mgbt-sm-0">
                                            <div class="col-sm-12">
                                                @Html.TextAreaFor(model => model.DealingsWithWIK, new { @class = "form-control", id = "DealingsWithWIK", @readonly = "true" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-9"><h4>Section 4) Declaration and Acknowledgement</h4></div>
                                <div class="col-lg-3">
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div>
                                            <p>
                                                @Html.CheckBoxFor(model => model.Declarationinfo)<span class="text-danger">*</span>  I certify that the statements made by me to the foregoing questions are true, complete and correct to the best of my knowledge and belief.
                                            </p>

                                            <p>
                                                @Html.CheckBoxFor(model => model.Statement)<span class="text-danger">*</span> I further understand that any false statement or withheld information made in connection to any job that may be offered by WIK may lead to cancellation of the job offer and / or, in the event that I am employed by WIK, will amount to misconduct and render me liable to disciplinary action, including termination of employment.
                                            </p>
                                            @*<p>
                                                Names: ___________________________________     (full names) <b></b>

                                                Signature:  ________________________________	Date:  	_____________________________

                                                </p>*@

                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-12">
                                <div class="row">
                                    <div class="col-sm-9"></div>
                                    <div class="col-sm-3">
                                        <button type="button" class="btn btn-primary btn-md btn-rounded w-md" onclick="OnDeclarationPrevious();">Previous</button>
                                        <button type="button" class="btn btn-success btn-md btn-rounded w-md" onclick="OnSubmitDeclaration();">Finish</button>
                                        @*<button type="button" class="btn btn-secondary btn-md btn-rounded w-md" onclick="OnDeclarationFinish();">Finish</button>*@
                                    </div>
                                </div>
                            </div>
                        </div>
                        &nbsp;
                        &nbsp;
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">

    $(document).ready(function () {
        debugger;
        $("#MembershipData").hide();
        $("#txtSubject").hide();
        $("#ApplicantRelationSave").hide();
        $("#ApplicantRelationClear").hide();
        $("#RelationshipDataGrid").hide();
        $("#OtherCertification").hide();
        $("#Others").hide();

        $("#DateOfBirth").datepicker({
            dateFormat: 'mm/dd/yy',
            changeMonth: true,
            changeYear: true,
            yearRange: '-100y:c+nn',
            maxDate: '-0d'
        });
        $("#QuaStartDate").datepicker({
            dateFormat: 'mm/dd/yy',
            changeMonth: true,
            changeYear: true,
            yearRange: '-100y:c+nn',
            maxDate: '-0d'
        });
        $("#QuaEndDate").datepicker({
            dateFormat: 'mm/dd/yy',
            changeMonth: true,
            changeYear: true,
            yearRange: '-100y:c+nn',
            maxDate: '-0d'
        });
        $("#EmpStartDate").datepicker({
            dateFormat: 'mm/dd/yy',
            changeMonth: true,
            changeYear: true,
            yearRange: '-100y:c+nn',
            maxDate: '-0d'
        });
        $("#EmpEndDate").datepicker({
            dateFormat: 'mm/dd/yy',
            changeMonth: true,
            changeYear: true,
            yearRange: '-100y:c+nn',
            maxDate: '-0d'
        });

        GetRelationsList();
        GetApplicantQualificationList();
        GetApplicantEmploymentHistoryList();
        GetRefereesList();
        GetLanguageList();
        OnMembershipChange();

        OnAcademicQualification();
        OnchangeRefererId();

        OnTerminatedIdChange();
        OnMisconductIdChange();
        OnManagementIdChange();
        OnInvestigationIdChange();
        OnCriminalOffenceIdChange();
        OnConvictionsIdChange();
        OnCorruptionIdChange();
        OnDisciplinaryIdChange();
        OnRelationToChildIdChange();
        OnRelationToAdultIdChange();
        OnDealingsWithWIKIdChange();
    });

    function showMyImage(fileInput) {
        var files = fileInput.files;
        for (var i = 0; i < files.length; i++) {
            var file = files[i];
            var imageType = /image.*/;
            if (!file.type.match(imageType)) {
                continue;
            }
            var img = document.getElementById("image");
            img.file = file;
            var reader = new FileReader();
            reader.onload = (function (aImg) {
                return function (e) {
                    aImg.src = e.target.result;
                };
            })(img);
            reader.readAsDataURL(file);
        }
    }
    //-----------------------------------------------------------//
    //function CheckApplicantExist() {
    //    debugger;
    //    $.ajax({
    //        type: "GET",
    //        url: '../UpdateProfile/CheckApplicantExist',
    //        data: {
    //        },
    //        success: function (data) {
    //            if (data != "") {
    //                $.NotificationApp.send("Information!", "Check below fields please " + data, 'top-right', '#da8609', 'warning');
    //            }
    //        }
    //    });
    //}


    //------------Applicant Personal Information------------------------//
    var data = new FormData();
    function OnSubmitApplicantPersonalInformation() {
        debugger;
        var str = "";
        if ($("#Title").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Title is Required. <br/>";
        }
        if ($("#FirstName").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; FirstName is Required. <br/>";
        }
        //if ($("#MiddleName").val() == "") {
        //    str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; MiddleName is Required. <br/>";
        //}
        if ($("#LastName").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; LastName is Required. <br/>";
        }
        if ($("#DateOfBirth").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; DateOfBirth is Required. <br/>";
        }
        if ($("#Gender").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Gender is Required. <br/>";
        }
        if ($("#Citizenship").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Id Type is Required. <br/>";
        }
        //if ($("#CitizenShipIdCopy").val() == "") {
        //    str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Id Type Copy is Required. <br/>";
        //}
        if ($("#CountryId").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Country is Required. <br/>";
        }
        if ($("#PhoneNumber").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; PhoneNumber is Required. <br/>";
        }
        if ($("#EmailAddress").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; EmailAddress is Required. <br/>";
        }
        if ($("#MotherTongue").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Mother Tongue is Required. <br/>";
        }
        if ($("#Nationality").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Nationality is Required. <br/>";
        }
        //if ($("#ApplicationLetter").val() == "") {
        //    str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; ApplicationLetter is Required. <br/>";
        //}
        //if ($("#Resume").val() == "") {
        //    str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Resume is Required. <br/>";
        //}
        if ($("#Address").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Address is Required. <br/>";
        }
        if ($("#County").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; County is Required. <br/>";
        }
        if ($("#AnyoneWorkinWIKId").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; AnyoneWorkinWIK is Required. <br/>";
        }
        if (str != "") {
            $.NotificationApp.send("Information!", "Check below fields please." + str, 'top-right', '#da8609', 'warning');
        }
        else {
            data = new FormData();
            var ApplicantId = $("#ApplicantId").val();
            var TitleId = $("#Title").val();
            var FirstName = $("#FirstName").val();
            var MiddleName = $("#MiddleName").val();
            var LastName = $("#LastName").val();
            var DateOfBirth = $("#DateOfBirth").val();
            var Citizenship = $("#Citizenship").val();
            var CitizenShipIdCopy = $("#CitizenShipIdCopy").val();
            var GenderId = $("#Gender").val();
            var Address = $("#Address").val();
            var CountryId = $("#CountryId").val();
            var EmailAddress = $("#EmailAddress").val();
            var PhoneNumber = $("#PhoneNumber").val();
            var AlternativePhoneNumber = $("#AlternativePhoneNumber").val();
            var MotherTongue = $("#MotherTongue").val();
            var Nationality = $("#Nationality").val();
            var ApplicationLetter = $("#ApplicationLetter").val();
            var Resume = $("#Resume").val();
            var Photo = $("#Photo").val();
            var SpecialNeed = $("#SpecialNeed").val();
            var SpecialNeedDetails = $("#SpecialNeedDetails").val();
            var County = $("#County").val();
            var AnyoneWorkinWIKId = $("#AnyoneWorkinWIKId").val();


            // Resume

            var FileName = "";
            debugger;
            var files = $("#Photo").get(0).files;
            if (files.length > 0) {
                for (var i = 0; i < files.length; i++) {
                    data.append(files[i].name, files[i], "PHOTO_" + files[i].name);
                    FileName = "PHOTO_" + files[i].name;
                }
            }

            var Photo = FileName;

            FileName = "";

            files = $("#Resume").get(0).files;
            if (files.length > 0) {
                for (var i = 0; i < files.length; i++) {
                    data.append(files[i].name, files[i], "RESUME_" + files[i].name);
                    FileName = "RESUME_" + files[i].name;
                }
            }

            var Resume = FileName;


            FileName = "";

            files = $("#CitizenShipIdCopy").get(0).files;
            if (files.length > 0) {
                for (var j = 0; j < files.length; j++) {
                    data.append(files[j].name, files[j], "IDCOPY_" + files[j].name);
                    FileName = "IDCOPY_" + files[j].name;
                }
            }

            var CitizenShipIdCopy = FileName;

            FileName = "";

            files = $("#ApplicationLetter").get(0).files;
            if (files.length > 0) {
                for (var j = 0; j < files.length; j++) {
                    data.append(files[j].name, files[j], "APPLICATIONLETTER_" + files[j].name);
                    FileName = "APPLICATIONLETTER_" + files[j].name;
                }
            }

            var ApplicationLetter = FileName;

            var Data = {
                "ApplicantId": ApplicantId,
                "TitleId": TitleId,
                "FirstName": FirstName,
                "MiddleName": MiddleName,
                "LastName": LastName,
                "DateOfBirth": DateOfBirth,
                "IdTypeMasterId": Citizenship,
                "CitizenShipIdCopy": CitizenShipIdCopy,
                "GenderId": GenderId,
                "Address": Address,
                "CountryId": CountryId,
                "EmailAddress": EmailAddress,
                "PhoneNumber": PhoneNumber,
                "AlternativePhoneNumber": AlternativePhoneNumber,
                "MotherTongue": MotherTongue,
                "Nationality": Nationality,
                "ApplicationLetter": ApplicationLetter,
                "CV": Resume,
                "Photo": Photo,
                "SpecialNeed": SpecialNeed,
                "SpecialNeedDetails": SpecialNeedDetails,
                "County": County,
                "AnyoneWorkinWIKId": AnyoneWorkinWIKId,
            }
            debugger;
            for (var key in Data) {
                data.append(key, Data[key]);
            }
            SaveApplicantPersonalInformation();

        }

        function SaveApplicantPersonalInformation() {
            $.ajax({
                url: '../UpdateProfile/SaveApplicantRegistration',
                data: data,
                type: 'POST',
                contentType: false,
                dataType: 'json',
                encode: true,
                processData: false,
                cache: false,
                success: function (data) {
                    if (data == "SUCCESS") {
                        $.NotificationApp.send("Success!", "Applicant Information Updated successfully !!", 'top-right', '#5ba035', 'success');
                    }
                    else if (data == "ALREADY_EXISTS") {
                        $.NotificationApp.send("Warning!", "Already Exists.", 'top-right', '#da8609', 'warning');
                    }

                    else if (data == "Failed") {
                        fail();
                    }
                    else {
                        $.NotificationApp.send("Information!", "Check below fields please " + data, 'top-right', '#da8609', 'warning');
                    }
                }
            });
        }
    }

    function ClearPersonalInformation() {
        $("#Title")[0].selectedIndex = 0;
        $("#FirstName").val("");
        $("#MiddleName").val("");
        $("#LastName").val("");
        $("#DateOfBirth").val("");
        $("#Gender")[0].selectedIndex = 0;
        $("#Citizenship")[0].selectedIndex = 0;
        $("#CitizenShipIdCopy").val("");
        $("#CountryId")[0].selectedIndex = 0;
        $("#PhoneNumber").val("");
        $("#AlternativePhoneNumber").val("");
        $("#EmailAddress").val("");
        $("#Nationality").val("");
        $("#ApplicationLetter").val("");
        $("#Resume").val("");
        $("#Address").val("");
        $("#SpecialNeed")[0].selectedIndex = 0;
        $("#County").val("");
        $("#Photo").val("");
        $("#MotherTongue").val("");
        $("#SpecialNeedDetails").val("");
    }

    //------------Applicant Qualification -----------------//
    var data = new FormData();
    function OnSubmitApplicantQualification() {
        debugger;
        var str = "";
        if ($("#AcademicQualificationId").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Academic Qualification is Required. <br/>";
        }
        if ($("#ApplicantQualificationId").val() == 0) {

            if ($("#AcademicQualificationAttachment").val() == "") {
                str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Attachment is Required. <br/>";
            }
        }

        if ($("#QuaStartDate").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Start Date is Required. <br/>";
        }
        if ($("#QuaEndDate").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; End Date is Required. <br/>";
        }
        if ($("#Discipline").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Discipline is Required. <br/>";
        }
        if ($("#University").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; University is Required. <br/>";
        }
        //if ($("#Class").val() == "") {
        //    str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Credit/Score/Class is Required. <br/>";
        //}
        if (str != "") {
            $.NotificationApp.send("Information!", "Check below fields please." + str, 'top-right', '#da8609', 'warning');
        }
        else {
            debugger;
            data = new FormData();
            var ApplicantQualificationId = $("#ApplicantQualificationId").val();
            var ApplicantId = $("#ApplicantId").val();
            var AcademicQualificationId = $("#AcademicQualificationId").val();
            var OtherCertification = $("#OtherCertification").val();
            var QuaStartDate = $("#QuaStartDate").val();
            var QuaEndDate = $("#QuaEndDate").val();
            var Discipline = $("#Discipline").val();
            var University = $("#University").val();
            var QuaCountryId = $("#QuaCountryId").val();
            var CreditScoreClass = $("#Class").val();

            // Bachelors

            FileName = "";

            files = $("#AcademicQualificationAttachment").get(0).files;
            if (files.length > 0) {
                for (var k = 0; k < files.length; k++) {
                    data.append(files[k].name, files[k], "AcademicQualificationAttachment_" + files[k].name);
                    FileName = "AcademicQualificationAttachment_" + files[k].name;
                }
            }

            var AcademicQualificationAttachment = FileName;

            var Data = {
                "ApplicantQualificationId": ApplicantQualificationId,
                "ApplicantId": ApplicantId,
                "AcademicQualificationId": AcademicQualificationId,
                "OtherCertification": OtherCertification,
                "QuaStartDate": QuaStartDate,
                "QuaEndDate": QuaEndDate,
                "Discipline": Discipline,
                "University": University,
                "QuaCountryId": QuaCountryId,
                "CreditScoreClass": CreditScoreClass,
                "AcademicQualificationAttachment": AcademicQualificationAttachment
            }
            debugger;
            for (var key in Data) {
                data.append(key, Data[key]);
            }
            SaveApplicantQualification();
        }

        function SaveApplicantQualification() {
            debugger;
            $.ajax({
                url: '../UpdateProfile/SaveApplicantQualification',
                data: data,
                type: 'POST',
                contentType: false,
                dataType: 'json',
                encode: true,
                processData: false,
                cache: false,
                success: function (data) {
                    if (data == "SUCCESS") {
                        $.NotificationApp.send("Success!", "Applicant Qualification Saved Successfully !!", 'top-right', '#5ba035', 'success');
                        GetApplicantQualificationList();
                        ClearQualificationDetails();
                    }
                    else if (data == "ALREADY_EXISTS") {
                        $.NotificationApp.send("Warning!", "Already Exists.", 'top-right', '#da8609', 'warning');
                    }
                    else if (data == "Failed") {
                        fail();
                    }
                }
            });
        }
    }

    function GetApplicantQualificationList() {
        debugger;
        $.ajax({
            type: "GET",
            url: '../UpdateProfile/GetApplicantQualificationList',
            data: {
            },
            success: function (data) {
                ShowLoader();
                $("#ApplicantQualificationDetails").show();
                $("#ApplicantQualificationDetails").html(data);
                //$('#ApplicantQualificationGrid').DataTable(
                //        { "paging": true, "searching": true });
                setTimeout(function () {
                    HideLoader();
                }, 100);
            }
        });
    }

    function EditApplicantQualification(iApplicantQualificationId) {
        debugger;
        var ApplicantQualificationId = iApplicantQualificationId
        $.ajax({
            type: "GET",
            url: '../UpdateProfile/EditApplicantQualification',
            data: {
                A_iApplicantQualificationId: ApplicantQualificationId
            },
            success: function (data) {
                debugger;
                $("#ApplicantQualificationId").val(data.ApplicantQualificationId);
                $("#AcademicQualificationId").val(data.AcademicQualificationId);
                //$("#AcademicQualificationAttachment").val(data.AcademicQualificationAttachment);
                //$("#AcademicQualificationAttachment").val(data.AttachmentSavedName);
                $("#ApplicantId").val(data.ApplicantId);
                $("#QuaStartDate").val(data.QuaStartDate);
                $("#QuaEndDate").val(data.QuaEndDate);
                $("#Discipline").val(data.Discipline);
                $("#University").val(data.University);
                $("#QuaCountryId").val(data.QuaCountryId);
                $("#Class").val(data.CreditScoreClass);
                if (data.OtherCertification != "") {
                    $("#OtherCertification").show();
                    $("#OtherCertification").val(data.OtherCertification);
                }
                else {
                    $("#OtherCertification").hide();
                }
            }
        });
    }

    function ClearQualificationDetails() {
        $("#ApplicantQualificationId").val("");
        $("#AcademicQualificationId").val("");
        $("#AcademicQualificationAttachment").val("");
        $("#QuaStartDate").val("");
        $("#QuaEndDate").val("");
        $("#Discipline").val("");
        $("#University").val("");
        $("#QuaCountryId")[0].selectedIndex = 0;
        $("#Class").val("");
        $("#OtherCertification").val("");
    }

    function DeleteApplicantQualification(ApplicantQualificationId) {
        debugger;
        $.ajax({
            type: "POST",
            url: '../UpdateProfile/DeleteApplicantQualification',
            data: {
                A_iApplicantQualificationId: ApplicantQualificationId,
            },
            success: function (data) {
                if (data == "DELETED") {
                    $.NotificationApp.send("info!", "Applicant Qualification DeActivated Successfully", 'top-right', '#5ba035', 'Info Notification');
                    GetApplicantQualificationList();
                }
            }
        });
    }


    //------------Applicant Employment History -----------------//

    function OnSubmitEmploymentHistory() {
        debugger;
        var str = "";
        if ($("#EmployerName").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Employer Name is Required. <br/>";
        }
        if ($("#TypeOfIndustryId").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Type Of Industry is Required. <br/>";
        }
        if ($("#JobTitle").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Job Title is Required. <br/>";
        }
        if ($("#EmpStartDate").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Start Date is Required. <br/>";
        }
        if ($("#EmpEndDate").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; End Date is Required. <br/>";
        }
        if ($("#Responsibility").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Responsibility is Required. <br/>";
        }
        //if ($("#NoticePeriod").val() == "") {
        //    str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Notice Period is Required. <br/>";
        //}
        if ($("#Reasonforleaving").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Reason for leaving is Required. <br/>";
        }
        if (str != "") {
            $.NotificationApp.send("Information!", "Check below fields please." + str, 'top-right', '#da8609', 'warning');
        }
        else {
            debugger;
            var EmploymentHistoryId = $("#EmploymentHistoryId").val();
            var ApplicantId = $("#ApplicantId").val();
            var EmployerName = $("#EmployerName").val();
            var TypeOfIndustryId = $("#TypeOfIndustryId").val();
            var TelephoneNumber = $("#TelephoneNumber").val();
            var JobTitle = $("#JobTitle").val();
            var TitleOfSupervisor = $("#TitleOfSupervisor").val();
            var EmpStartDate = $("#EmpStartDate").val();
            var EmpEndDate = $("#EmpEndDate").val();
            var Responsibility = $("#Responsibility").val();
            var NoticePeriod = $("#NoticePeriod").val();
            var Reasonforleaving = $("#Reasonforleaving").val();
            var City = $("#City").val();
            var MonthlySalary = $("#MonthlySalary").val();
            var SubjectCombinations = $("#SubjectCombinations").val();
            var Subject = $("#Subject").val();

            var Data = {
                "EmploymentHistoryId": EmploymentHistoryId,
                "ApplicantId": ApplicantId,
                "EmployerName": EmployerName,
                "TypeOfIndustryId": TypeOfIndustryId,
                "TelephoneNo": TelephoneNumber,
                "JobTitle": JobTitle,
                "TitleOfSupervisor": TitleOfSupervisor,
                "EmpStartDate": EmpStartDate,
                "EmpEndDate": EmpEndDate,
                "Responsibility": Responsibility,
                "NoticePeriod": NoticePeriod,
                "Reasonforleaving": Reasonforleaving,
                "City": City,
                "MonthlySalary": MonthlySalary,
                "SubjectCombinations": SubjectCombinations,
                "Subject": Subject

            }

            SaveEmploymentHistory(Data);
        }
    }

    function SaveEmploymentHistory(Data) {
        debugger;
        $.ajax({
            url: '../UpdateProfile/SaveApplicantEmploymentHistory',
            data: JSON.stringify(Data),
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data == "SUCCESS") {
                    $.NotificationApp.send("Success!", "Applicant Employment History Saved Successfully !!", 'top-right', '#5ba035', 'success');
                    GetApplicantEmploymentHistoryList();
                    ClearEmploymentHistoryDetails();
                }
                else if (data == "ALREADY_EXISTS") {
                    $.NotificationApp.send("Warning!", "Already Exists.", 'top-right', '#da8609', 'warning');
                }
                else if (data == "Failed") {
                    fail();
                }
            }
        });
    }

    function GetApplicantEmploymentHistoryList() {
        debugger;
        $.ajax({
            type: "GET",
            url: '../UpdateProfile/GetApplicantEmploymentHistoryList',
            data: {
            },
            success: function (data) {
                ShowLoader();
                $("#EmploymentHistoryDetailsList").show();
                $("#EmploymentHistoryDetailsList").html(data);
                //$('#ApplicantEmploymentHistoryGrid').DataTable(
                //        { "paging": true, "searching": true });
                setTimeout(function () {
                    HideLoader();
                }, 100);
            }
        });
    }

    function EditEmploymentHistory(EmploymentHistoryId) {
        debugger;
        var EmploymentHistoryId = EmploymentHistoryId
        $.ajax({
            type: "GET",
            url: '../UpdateProfile/EditApplicantEmploymentHistory',
            data: {
                A_iEmploymentHistoryId: EmploymentHistoryId
            },
            success: function (data) {
                debugger;
                $("#EmploymentHistoryId").val(data.EmploymentHistoryId);
                $("#ApplicantId").val(data.ApplicantId);
                $("#EmployerName").val(data.EmployerName);
                $("#TypeOfIndustryId").val(data.TypeOfIndustryId);
                $("#TelephoneNumber").val(data.TelephoneNo);
                $("#JobTitle").val(data.JobTitle);
                $("#TitleOfSupervisor").val(data.TitleOfSupervisor);
                $("#EmpStartDate").val(data.EmpStartDate);
                $("#EmpEndDate").val(data.EmpEndDate);
                $("#Responsibility").val(data.Responsibility);
                $("#NoticePeriod").val(data.NoticePeriod);
                $("#Reasonforleaving").val(data.Reasonforleaving);
                $("#City").val(data.City);
                $("#MonthlySalary").val(data.MonthlySalary);
                $("#SubjectCombinations").val(data.SubjectCombinations);
                debugger;
                if (data.SubjectCombinations == 2) {
                    $("#txtSubject").show();
                    $("#Subject").val(data.Subject);
                }
                else {
                    $("#txtSubject").hide();
                    $("#Subject").val(data.Subject);
                }
                //$("#Subject").val(data.Subject);
            }
        });
    }

    function ClearEmploymentHistoryDetails() {
        $("#EmploymentHistoryId").val("");
        $("#EmployerName").val("");
        $("#TypeOfIndustryId")[0].selectedIndex = 0;
        $("#TelephoneNumber").val("");
        $("#JobTitle").val("");
        $("#TitleOfSupervisor").val("");
        $("#EmpStartDate").val("");
        $("#EmpEndDate").val("");
        $("#Responsibility").val("");
        $("#NoticePeriod").val("");
        $("#Reasonforleaving").val("");
        $("#City").val("");
        $("#MonthlySalary").val("");
        $("#SubjectCombinations")[0].selectedIndex = 0;
        $("#Subject").val("");
        $("#txtSubject").hide();
    }

    function DeleteEmploymentHistory(EmploymentHistoryId) {
        debugger;
        $.ajax({
            type: "POST",
            url: '../UpdateProfile/DeleteApplicantEmploymentHistory',
            data: {
                A_iEmploymentHistoryId: EmploymentHistoryId,
            },
            success: function (data) {
                if (data == "DELETED") {
                    $.NotificationApp.send("info!", "Applicant Employment History DeActivated Successfully", 'top-right', '#5ba035', 'Info Notification');
                    GetApplicantEmploymentHistoryList();
                }
            }
        });
    }


    //------------Applicant Referees -----------------//

    function OnSubmitReferees() {
        debugger;
        var str = "";
        if ($("#EmpFirstName").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; First Name is Required. <br/>";
        }
        if ($("#SecondName").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Second Name is Required. <br/>";
        }
        if ($("#Position").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Position is Required. <br/>";
        }
        if ($("#RelationshipTOApplicant").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Relationship TO Applicant is Required. <br/>";
        }
        if ($("#NameOfTheOrganization").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Name Of The Organization is Required. <br/>";
        }
        if ($("#TelephoneContact").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Telephone Contact is Required. <br/>";
        }
        if ($("#EmpEmailAddress").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Email Address is Required. <br/>";
        }
        if (str != "") {
            $.NotificationApp.send("Information!", "Check below fields please." + str, 'top-right', '#da8609', 'warning');
        }
        else {
            debugger;
            var RefereesId = $("#RefereesId").val();
            var ApplicantId = $("#ApplicantId").val();
            var EmpFirstName = $("#EmpFirstName").val();
            var SecondName = $("#SecondName").val();
            var Position = $("#Position").val();
            var RelationshipTOApplicant = $("#RelationshipTOApplicant").val();
            var NameOfTheOrganization = $("#NameOfTheOrganization").val();
            var TelephoneContact = $("#TelephoneContact").val();
            var EmpEmailAddress = $("#EmpEmailAddress").val();

            var Data = {
                "RefereesId": RefereesId,
                "ApplicantId": ApplicantId,
                "EmpFirstName": EmpFirstName,
                "SecondName": SecondName,
                "Position": Position,
                "RelationshipTOApplicant": RelationshipTOApplicant,
                "NameOfTheOrganization": NameOfTheOrganization,
                "TelephoneContact": TelephoneContact,
                "EmpEmailAddress": EmpEmailAddress,
            }

            SaveRefereesData(Data);
        }
    }

    function SaveRefereesData(Data) {
        debugger;
        $.ajax({
            url: '../UpdateProfile/SaveApplicantRefereesDetails',
            data: JSON.stringify(Data),
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data == "SUCCESS") {
                    $.NotificationApp.send("Success!", "Applicant Referees Detaills Saved Successfully !!", 'top-right', '#5ba035', 'success');
                    GetRefereesList();
                    ClearRefereesDetails();
                }
                else if (data == "ALREADY_EXISTS") {
                    $.NotificationApp.send("Warning!", "Already Exists.", 'top-right', '#da8609', 'warning');
                }
                else if (data == "Failed") {
                    fail();
                }
            }
        });
    }

    function GetRefereesList() {
        debugger;
        $.ajax({
            type: "GET",
            url: '../UpdateProfile/GetApplicantRefereesList',
            data: {
            },
            success: function (data) {
                ShowLoader();
                $("#RefereesGrid").show();
                $("#RefereesGrid").html(data);
                //$('#ApplicantRefereesGrid').DataTable(
                //    { "paging": true, "searching": true }
                //);
                setTimeout(function () {
                    HideLoader();
                }, 100);
            }
        });
    }

    function EditRefereesData(RefereesId) {
        debugger;
        var RefereesId = RefereesId
        $.ajax({
            type: "GET",
            url: '../UpdateProfile/EditApplicantRefereesDetails',
            data: {
                A_iRefereesId: RefereesId
            },
            success: function (data) {
                debugger;
                $("#RefereesId").val(data.RefereesId);
                $("#ApplicantId").val(data.ApplicantId);
                $("#EmpFirstName").val(data.EmpFirstName);
                $("#SecondName").val(data.SecondName);
                $("#Position").val(data.Position);
                $("#RelationshipTOApplicant").val(data.RelationshipTOApplicant);
                $("#NameOfTheOrganization").val(data.NameOfTheOrganization);
                $("#TelephoneContact").val(data.TelephoneContact);
                $("#EmpEmailAddress").val(data.EmpEmailAddress);
            }
        });
    }

    function ClearRefereesDetails() {
        $("#RefereesId").val("");
        $("#EmpFirstName").val("");
        $("#SecondName").val("");
        $("#Position").val("");
        $("#RelationshipTOApplicant").val("");
        $("#NameOfTheOrganization").val("");
        $("#TelephoneContact").val("");
        $("#EmpEmailAddress").val("");
    }

    function DeleteRefereesData(RefereesId) {
        debugger;
        $.ajax({
            type: "POST",
            url: '../UpdateProfile/DeleteApplicantRefereesData',
            data: {
                A_iRefereesId: RefereesId,
            },
            success: function (data) {
                if (data == "DELETED") {
                    $.NotificationApp.send("info!", "Applicant Referees Data DeActivated Successfully", 'top-right', '#5ba035', 'Info Notification');
                    GetRefereesList();
                }
            }
        });
    }


    //---------------------------------------------------------//

    function OnSubjectChange() {
        var SubjectCombinations = $("#SubjectCombinations option:selected").text();
        if (SubjectCombinations == "Yes") {
            $("#txtSubject").show();
        }
        else {
            $("#txtSubject").hide();
            $("#Subject").val("");
        }
    }

    function OnMembershipChange() {
        debugger;
        var Membership = $("#Membership option:selected").text();
        if (Membership == "Yes") {
            $("#MembershipData").show();
        }
        else {
            $("#MembershipData").hide();
            $("#NameofProfessionalBody").val("");
            $("#MembershipNumber").val("");
            $("#Validity")[0].selectedIndex = 0;
        }
    }

    function OnAnyoneWorkinWIKChange() {
        debugger;
        var AnyoneWorkinWIKId = $("#AnyoneWorkinWIKId option:selected").text();
        if (AnyoneWorkinWIKId == "Yes") {
            $("#RelationshipDataGrid").show();
            $("#ApplicantRelationSave").show();
            $("#ApplicantRelationClear").show();
        }
        else {
            $("#RelationshipDataGrid").hide();
            $("#ApplicantRelationSave").hide();
            $("#ApplicantRelationClear").hide();
        }
    }


    function OnAcademicQualification() {
        debugger;
        var AcademicQualificationId = $("#AcademicQualificationId option:selected").text();
        if (AcademicQualificationId == "Other Certification") {
            $("#OtherCertification").show();
        }
        else {
            $("#OtherCertification").hide();
            $("#OtherCertification").val("");
        }
    }

    function OnchangeRefererId() {
        debugger;
        var Referer = $("#Referer option:selected").text();
        if (Referer == "Others") {
            $("#Others").show();
        }
        else {
            $("#Others").hide();
            $("#Others").val("");
        }
    }

    //function OnPageLoadMembershipDataDisplay() {
    //    debugger;
    //    if ($("#Membership option:selected").val() == 1) {
    //        $("#MembershipData").show();
    //    }
    //}
    //---------------------Membership----------------------------------------//

    function OnSubmitMembershipData() {
        debugger;
        var str = "";
        if ($("#Membership option:selected").val() == 1) {
            if ($("#NameofProfessionalBody").val() == "") {
                str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Name of Professional Body is Required. <br/>";
            }
            if ($("#MembershipNumber").val() == "") {
                str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Membership Number is Required. <br/>";
            }
            if ($("#Validity").val() == "") {
                str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Validity is Required. <br/>";
            }
        }
        if (str != "") {
            $.NotificationApp.send("Information!", "Check below fields please." + str, 'top-right', '#da8609', 'warning');
        }
        else {
            debugger;
            var ApplicantMotivationId = $("#ApplicantMotivationId").val();
            var ApplicantId = $("#ApplicantId").val();
            var Membership = $("#Membership").val();
            var NameofProfessionalBody = $("#NameofProfessionalBody").val();
            var MembershipNumber = $("#MembershipNumber").val();
            var Validity = $("#Validity").val();

            var Data = {
                "ApplicantMotivationId": ApplicantMotivationId,
                "ApplicantId": ApplicantId,
                "Membership": Membership,
                "NameofProfessionalBody": NameofProfessionalBody,
                "MembershipNumber": MembershipNumber,
                "Validity": Validity,
            }
            debugger;
            SaveMembershipData(Data);
        }
    }

    function SaveMembershipData(Data) {
        debugger;
        $.ajax({
            url: '../UpdateProfile/SaveMembershipDataDetails',
            data: JSON.stringify(Data),
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data == "SUCCESS") {
                    $.NotificationApp.send("Success!", "Applicant Membership Detaills Saved Successfully !!", 'top-right', '#5ba035', 'success');
                    ClearMembershipDataDetails();
                    OnQualificationNext();
                }
                else if (data == "ALREADY_EXISTS") {
                    $.NotificationApp.send("Warning!", "Already Exists.", 'top-right', '#da8609', 'warning');
                }
                else if (data == "Failed") {
                    fail();
                }
            }
        });
    }

    function ClearMembershipDataDetails() {
        //$("#ApplicantMotivationId").val("");
        $("#Membership")[0].selectedIndex = 0;
        $("#NameofProfessionalBody").val("");
        $("#MembershipNumber").val("");
        $("#Validity")[0].selectedIndex = 0;
    }

    //-----------------------Motivation Skills------------------------------------//
    function OnSubmitMotivationSkills() {
        debugger;
        var str = "";
        if ($("#JobDescription").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Job Description is Required. <br/>";
        }
        if ($("#Referer").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Referer is Required. <br/>";
        }
        if ($("#ApplicationNote option:selected").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Application Note is Required. <br/>";
        }
        if (str != "") {
            $.NotificationApp.send("Information!", "Check below fields please." + str, 'top-right', '#da8609', 'warning');
        }
        else {
            debugger;
            var ApplicantMotivationId = $("#ApplicantMotivationId").val();
            var ApplicantId = $("#ApplicantId").val();
            //var Membership = $("#Membership").val();
            //var NameofProfessionalBody = $("#NameofProfessionalBody").val();
            //var MembershipNumber = $("#MembershipNumber").val();
            //var Validity = $("#Validity").val();
            var JobDescription = $("#JobDescription").val();
            var Referer = $("#Referer").val();
            var ApplicationNote = $("input[name='ApplicationNote']:checked").val();
            var Others = $("#Others").val();

            var Data = {
                "ApplicantMotivationId": ApplicantMotivationId,
                "ApplicantId": ApplicantId,
                //"Membership": Membership,
                //"NameofProfessionalBody": NameofProfessionalBody,
                //"MembershipNumber": MembershipNumber,
                //"Validity": Validity,
                "JobDescription": JobDescription,
                "RefererId": Referer,
                "ApplicationNote": ApplicationNote,
                "Others": Others
            }
            debugger;
            SaveMotivationSkillsData(Data);
        }
    }

    function SaveMotivationSkillsData(Data) {
        debugger;
        $.ajax({
            url: '../UpdateProfile/SaveMotivationSkillsDetails',
            data: JSON.stringify(Data),
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data == "SUCCESS") {
                    $.NotificationApp.send("Success!", "Applicant Motivation Skills Detaills Saved Successfully !!", 'top-right', '#5ba035', 'success');
                    ClearMotivationSkillsDetails();
                }
                else if (data == "ALREADY_EXISTS") {
                    $.NotificationApp.send("Warning!", "Already Exists.", 'top-right', '#da8609', 'warning');
                }
                else if (data == "Failed") {
                    fail();
                }
            }
        });
    }

    function ClearMotivationSkillsDetails() {
        //$("#ApplicantMotivationId").val("");
        $("#JobDescription").val("");
        $("#Referer")[0].selectedIndex = 0;
        $('input[name=ApplicationNote]').attr('checked', false);
        $("#Others").val("");
    }

    //---------------------Declaration tab-----------------------------------//

    function OnSubmitDeclaration() {

        debugger;
        var str = "";
        if ($("#Declarationinfo").is(':checked') == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Declaration is Required. <br/>";
        }
        if ($("#Statement").is(':checked') == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Acknowledgement is Required. <br/>";
        }
        if (str != "") {
            $.NotificationApp.send("Information!", "Check below fields please." + str, 'top-right', '#da8609', 'warning');
        }
        else {

            var DeclarationID = $("#DeclarationID").val();
            var ApplicantId = $("#ApplicantId").val();
            var TerminatedId = $("input[name='TerminatedId']:checked").val();
            var Terminatation = $("#Terminatation").val();
            var MisconductId = $("input[name='MisconductId']:checked").val();
            var Misconduct = $("#Misconduct").val();
            var ManagementId = $("input[name='ManagementId']:checked").val();
            var Management = $("#Management").val();
            var InvestigationId = $("input[name='InvestigationId']:checked").val();
            var Investigation = $("#Investigation").val();


            var CriminalOffenceId = $("input[name='CriminalOffenceId']:checked").val();
            var CriminalOffence = $("#CriminalOffence").val();
            var ConvictionsId = $("input[name='ConvictionsId']:checked").val();
            var Convictions = $("#Convictions").val();
            var CorruptionId = $("input[name='CorruptionId']:checked").val();
            var Corruption = $("#Corruption").val();
            var DisciplinaryId = $("input[name='DisciplinaryId']:checked").val();
            var Disciplinary = $("#Disciplinary").val();
            var RelationToChildId = $("input[name='RelationToChildId']:checked").val();
            var RelationToChild = $("#RelationToChild").val();
            var RelationToAdultId = $("input[name='RelationToAdultId']:checked").val();
            var RelationToAdult = $("#RelationToAdult").val();


            var RelativeId = $("input[name='RelativeId']:checked").val();
            var DealingsWithWIKId = $("input[name='DealingsWithWIKId']:checked").val();
            var DealingsWithWIK = $("#DealingsWithWIK").val();

            var Declarationinfo = $("#Declarationinfo").is(':checked');
            var Statement = $("#Statement").is(':checked');


            var Data = {
                "DeclarationID": DeclarationID,
                "ApplicantId": ApplicantId,
                "TerminatedId": TerminatedId,
                "Terminatation": Terminatation,
                "MisconductId": MisconductId,
                "Misconduct": Misconduct,
                "ManagementId": ManagementId,
                "Management": Management,
                "InvestigationId": InvestigationId,
                "Investigation": Investigation,

                "CriminalOffenceId": CriminalOffenceId,
                "CriminalOffence": CriminalOffence,
                "ConvictionsId": ConvictionsId,
                "Convictions": Convictions,
                "CorruptionId": CorruptionId,
                "Corruption": Corruption,
                "DisciplinaryId": DisciplinaryId,
                "Disciplinary": Disciplinary,
                "RelationToChildId": RelationToChildId,
                "RelationToChild": RelationToChild,
                "RelationToAdultId": RelationToAdultId,
                "RelationToAdult": RelationToAdult,

                "RelativeId": RelativeId,
                "DealingsWithWIKId": DealingsWithWIKId,
                "DealingsWithWIK": DealingsWithWIK,

                "Declarationinfo": Declarationinfo,
                "Statement": Statement

            }
            debugger;
            SaveDeclarationData(Data);
        }
    }

    function SaveDeclarationData(Data) {
        debugger;
        $.ajax({
            url: '../UpdateProfile/SaveApplicantDeclarationDetails',
            data: JSON.stringify(Data),
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data == "SUCCESS") {
                    $.NotificationApp.send("Success!", "Applicant Declaration Detaills Saved Successfully !!", 'top-right', '#5ba035', 'success');
                    Cancel();
                }
                else if (data == "ALREADY_EXISTS") {
                    $.NotificationApp.send("Warning!", "Already Exists.", 'top-right', '#da8609', 'warning');
                }
                else if (data == "Failed") {
                    fail();
                }
            }
        });
    }

    //--------------------------Language-------------------------------------------------//
    function OnSubmitApplicantLanguage() {
        debugger;
        var str = "";
        //var strRadiobuttonlength = $("input:radio[name='LanguageRead']").length;
        if ($("#Language").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Language is Required. <br/>";
        }
        if ($("input[name='LanguageRead']:checked").val() == undefined) {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Read is Required. <br/>";
        }
        if ($("input[name='Write']:checked").val() == undefined) {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Write is Required. <br/>";
        }
        if ($("input[name='Speak']:checked").val() == undefined) {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Speak is Required. <br/>";
        }
        if ($("input[name='Understand']:checked").val() == undefined) {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Understand is Required. <br/>";
        }
        if (str != "") {
            $.NotificationApp.send("Information!", "Check below fields please." + str, 'top-right', '#da8609', 'warning');
        }
        else {
            debugger;
            var LanguageSpokenId = $("#LanguageSpokenId").val();
            var ApplicantId = $("#ApplicantId").val();
            var Language = $("#Language").val();
            var LanguageRead = $("input[name='LanguageRead']:checked").val();
            var Write = $("input[name='Write']:checked").val();
            var Speak = $("input[name='Speak']:checked").val();
            var Understand = $("input[name='Understand']:checked").val();

            var Data = {
                "LanguageSpokenId": LanguageSpokenId,
                "ApplicantId": ApplicantId,
                "Language": Language,
                "LanguageRead": LanguageRead,
                "Write": Write,
                "Speak": Speak,
                "Understand": Understand,
            }

            SaveLanguageData(Data);
        }
    }

    function SaveLanguageData(Data) {
        debugger;
        $.ajax({
            url: '../UpdateProfile/SaveApplicantLanguageDetails',
            data: JSON.stringify(Data),
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data == "SUCCESS") {
                    $.NotificationApp.send("Success!", "Applicant Language Detaills Saved Successfully !!", 'top-right', '#5ba035', 'success');
                    GetLanguageList();
                    ClearLanguage();
                }
                else if (data == "ALREADY_EXISTS") {
                    $.NotificationApp.send("Warning!", "Already Exists.", 'top-right', '#da8609', 'warning');
                }
                else if (data == "Failed") {
                    fail();
                }
            }
        });
    }

    function GetLanguageList() {
        debugger;
        $.ajax({
            type: "GET",
            url: '../UpdateProfile/GetApplicantLanguageList',
            data: {
            },
            success: function (data) {
                ShowLoader();
                $("#ApplicantLanguageGrid").show();
                $("#ApplicantLanguageGrid").html(data);
                //$('#ApplicantLanguageDetailsGrid').DataTable(
                //    { "paging": true, "searching": true }
                //);
                setTimeout(function () {
                    HideLoader();
                }, 100);
            }
        });
    }

    function ClearLanguage() {
        $("#LanguageSpokenId").val("");
        $("#Language").val("");
        $('input[name=LanguageRead]').attr('checked', false);
        $('input[name=Write]').attr('checked', false);
        $('input[name=Speak]').attr('checked', false);
        $('input[name=Understand]').attr('checked', false);
    }

    function EditLanguageData(LanguageSpokenId) {
        debugger;
        var LanguageSpokenId = LanguageSpokenId
        $.ajax({
            type: "GET",
            url: '../UpdateProfile/EditApplicantLanguageDetails',
            data: {
                A_iLanguageSpokenId: LanguageSpokenId
            },
            success: function (data) {
                debugger;
                $("#LanguageSpokenId").val(data.LanguageSpokenId);
                $("#ApplicantId").val(data.ApplicantId);
                $("#Language").val(data.Language);
                if (data.LanguageRead != "") {
                    $('input[name=LanguageRead][value=' + data.LanguageRead + ']').prop('checked', true)
                }
                if (data.Write != "") {
                    $('input[name=Write][value=' + data.Write + ']').prop('checked', true)
                }
                if (data.Speak != "") {
                    $('input[name=Speak][value=' + data.Speak + ']').prop('checked', true)
                }
                if (data.Understand != "") {
                    $('input[name=Understand][value=' + data.Understand + ']').prop('checked', true)
                }
            }
        });
    }

    function DeleteLanguageData(LanguageSpokenId) {
        debugger;
        $.ajax({
            type: "POST",
            url: '../UpdateProfile/DeleteApplicantLanguageData',
            data: {
                A_iLanguageSpokenId: LanguageSpokenId,
            },
            success: function (data) {
                if (data == "DELETED") {
                    $.NotificationApp.send("info!", "Applicant Language Data DeActivated Successfully", 'top-right', '#5ba035', 'Info Notification');
                    GetLanguageList();
                }
            }
        });
    }

    //-------------------------------Realation--------------------------------------------//
    function OnSubmitApplicantRelation() {
        debugger;
        var str = "";
        if ($("#RelativeName").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Relative Name is Required. <br/>";
        }
        if ($("#Relationship").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Relationship is Required. <br/>";
        }
        if (str != "") {
            $.NotificationApp.send("Information!", "Check below fields please." + str, 'top-right', '#da8609', 'warning');
        }
        else {
            debugger;
            var RelationId = $("#RelationId").val();
            var ApplicantId = $("#ApplicantId").val();
            //var AnyoneWorkinWIKId = $("#AnyoneWorkinWIKId").val();
            var RelativeName = $("#RelativeName").val();
            var Relationship = $("#Relationship").val();

            var Data = {
                "RelationId": RelationId,
                "ApplicantId": ApplicantId,
                //"AnyoneWorkinWIKId": AnyoneWorkinWIKId,
                "RelativeName": RelativeName,
                "Relationship": Relationship,
            }
            debugger;
            SaveApplicantRelationData(Data);
        }
    }

    function SaveApplicantRelationData(Data) {
        debugger;
        $.ajax({
            url: '../UpdateProfile/SaveApplicantRelationDetails',
            data: JSON.stringify(Data),
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                if (data == "SUCCESS") {
                    $.NotificationApp.send("Success!", "Applicant Relation Detaills Saved Successfully !!", 'top-right', '#5ba035', 'success');
                    GetRelationsList();
                    ClearApplicantRelation();
                }
                else if (data == "ALREADY_EXISTS") {
                    $.NotificationApp.send("Warning!", "Already Exists.", 'top-right', '#da8609', 'warning');
                }
                else if (data == "Failed") {
                    fail();
                }
            }
        });
    }

    function GetRelationsList() {
        debugger;
        $.ajax({
            type: "GET",
            url: '../UpdateProfile/GetApplicantRelationDetailsList',
            data: {
            },
            success: function (data) {
                ShowLoader();
                $("#ApplicantRelationGrid").show();
                $("#ApplicantRelationGrid").html(data);
                //$('#ApplicantRelationDetailsGrid').DataTable(
                //    { "paging": true, "searching": true }
                //);
                setTimeout(function () {
                    HideLoader();
                }, 100);
            }
        });
    }

    function EditRelationData(RelationId) {
        debugger;
        var RelationId = RelationId
        $.ajax({
            type: "GET",
            url: '../UpdateProfile/EditApplicantRelativeData',
            data: {
                A_iRelationId: RelationId
            },
            success: function (data) {
                debugger;
                $("#RelationId").val(data.RelationId);
                $("#ApplicantId").val(data.ApplicantId);
                debugger;
                $("#AnyoneWorkinWIKId").val(data.AnyoneWorkinWIKId);
                if (data.AnyoneWorkinWIKId == 1) {
                    $("#RelationshipDataGrid").show();
                    $("#ApplicantRelationSave").show();
                    $("#ApplicantRelationClear").show();
                    $("#RelativeName").val(data.RelativeName);
                    $("#Relationship").val(data.Relationship);
                }
                else {
                    $("#RelationshipDataGrid").hide();
                    $("#ApplicantRelationSave").hide();
                    $("#ApplicantRelationClear").hide();
                }
            }
        });
    }

    function ClearApplicantRelation() {
        $("#RelationId").val("");
        $("#RelativeName").val("");
        $("#Relationship").val("");
    }

    function DeleteRelationData(RelationId) {
        debugger;
        $.ajax({
            type: "POST",
            url: '../UpdateProfile/DeleteApplicantRelationData',
            data: {
                A_iRelationId: RelationId,
            },
            success: function (data) {
                if (data == "DELETED") {
                    $.NotificationApp.send("info!", "Applicant Relation Data DeActivated Successfully", 'top-right', '#5ba035', 'Info Notification');
                    GetRelationsList();
                }
            }
        });
    }


    //----------------------------------------------------------------------------//
    function OnTerminatedIdChange() {
        debugger;
        var TerminatedId = $("input[name='TerminatedId']:checked").val();
        if (TerminatedId == "Yes") {
            $("#Terminatation").prop("readonly", false);
        }
        else {
            $("#Terminatation").prop("readonly", true);
            $("#Terminatation").val("");
        }
    }

    function OnMisconductIdChange() {
        debugger;
        var MisconductId = $("input[name='MisconductId']:checked").val();
        if (MisconductId == "Yes") {
            $("#Misconduct").prop("readonly", false);
        }
        else {
            $("#Misconduct").prop("readonly", true);
            $("#Misconduct").val("");
        }
    }

    function OnManagementIdChange() {
        debugger;
        var ManagementId = $("input[name='ManagementId']:checked").val();
        if (ManagementId == "Yes") {
            $("#Management").prop("readonly", false);
        }
        else {
            $("#Management").prop("readonly", true);
            $("#Management").val("");
        }
    }

    function OnInvestigationIdChange() {
        debugger;
        var InvestigationId = $("input[name='InvestigationId']:checked").val();
        if (InvestigationId == "Yes") {
            $("#Investigation").prop("readonly", false);
        }
        else {
            $("#Investigation").prop("readonly", true);
            $("#Investigation").val("");
        }
    }

    function OnCriminalOffenceIdChange() {
        debugger;
        var CriminalOffenceId = $("input[name='CriminalOffenceId']:checked").val();
        if (CriminalOffenceId == "Yes") {
            $("#CriminalOffence").prop("readonly", false);
        }
        else {
            $("#CriminalOffence").prop("readonly", true);
            $("#CriminalOffence").val("");
        }
    }

    function OnConvictionsIdChange() {
        debugger;
        var ConvictionsId = $("input[name='ConvictionsId']:checked").val();
        if (ConvictionsId == "Yes") {
            $("#Convictions").prop("readonly", false);
        }
        else {
            $("#Convictions").prop("readonly", true);
            $("#Convictions").val("");
        }
    }

    function OnCorruptionIdChange() {
        debugger;
        var CorruptionId = $("input[name='CorruptionId']:checked").val();
        if (CorruptionId == "Yes") {
            $("#Corruption").prop("readonly", false);
        }
        else {
            $("#Corruption").prop("readonly", true);
            $("#Corruption").val("");
        }
    }

    function OnDisciplinaryIdChange() {
        debugger;
        var DisciplinaryId = $("input[name='DisciplinaryId']:checked").val();
        if (DisciplinaryId == "Yes") {
            $("#Disciplinary").prop("readonly", false);
        }
        else {
            $("#Disciplinary").prop("readonly", true);
            $("#Disciplinary").val("");
        }
    }

    function OnRelationToChildIdChange() {
        debugger;
        var RelationToChildId = $("input[name='RelationToChildId']:checked").val();
        if (RelationToChildId == "Yes") {
            $("#RelationToChild").prop("readonly", false);
        }
        else {
            $("#RelationToChild").prop("readonly", true);
            $("#RelationToChild").val("");
        }
    }

    function OnRelationToAdultIdChange() {
        debugger;
        var RelationToAdultId = $("input[name='RelationToAdultId']:checked").val();
        if (RelationToAdultId == "Yes") {
            $("#RelationToAdult").prop("readonly", false);
        }
        else {
            $("#RelationToAdult").prop("readonly", true);
            $("#RelationToAdult").val("");
        }
    }

    function OnDealingsWithWIKIdChange() {
        debugger;
        var DealingsWithWIKId = $("input[name='DealingsWithWIKId']:checked").val();
        if (DealingsWithWIKId == "Yes") {
            $("#DealingsWithWIK").prop("readonly", false);
        }
        else {
            $("#DealingsWithWIK").prop("readonly", true);
            $("#DealingsWithWIK").val("");
        }
    }

    //---------------------------------------------------------------//

    function Cancel() {
        var url = '@Url.Action("Index", "Home")';
        window.location.href = url;
    }
    function OnPersonalInformationNext() {
        $('#v-pills-tab a[href="#v-pills-Qualification-tabContent"]').tab('show');
    }

    function OnQualificationNext() {
        $('#v-pills-tab a[href="#v-pills-EmploymentHistory-tabContent"]').tab('show');
    }
    function OnQualificationPrevious() {
        $('#v-pills-tab a[href="#v-pills-PersonalInformation-tabContent"]').tab('show');
    }

    function OnEmploymentNext() {
        $('#v-pills-tab a[href="#v-pills-MotivationSkills-tabContent"]').tab('show');
    }
    function OnEmploymentPrevious() {
        $('#v-pills-tab a[href="#v-pills-Qualification-tabContent"]').tab('show');
    }

    function OnRefereesNext() {
        $('#v-pills-tab a[href="#v-pills-Declaration-tabContent"]').tab('show');
    }
    function OnRefereesPrevious() {
        $('#v-pills-tab a[href="#v-pills-MotivationSkills-tabContent"]').tab('show');
    }

    function OnMotivationSkillsNext() {
        $('#v-pills-tab a[href="#v-pills-Referees-tabContent"]').tab('show');
    }
    function OnMotivationSkillsPrevious() {
        $('#v-pills-tab a[href="#v-pills-EmploymentHistory-tabContent"]').tab('show');
    }

    function OnDeclarationPrevious() {
        $('#v-pills-tab a[href="#v-pills-Referees-tabContent"]').tab('show');
    }

    function OnDeclarationFinish() {
        var url = '@Url.Action("Index", "Home")';
        window.location.href = url;
    }

    function isNumberKey(evt) {
        var theEvent = evt || window.event;
        var key = theEvent.keyCode || theEvent.which;
        key = String.fromCharCode(key);
        var regex = /[0-9]/;
        if (!regex.test(key)) {
            theEvent.returnValue = false;
            if (theEvent.preventDefault) theEvent.preventDefault();
        }
    }

    //-------------------------------------------------------------//

    var data = new FormData();
    function OnSubmitApplicant() {
        debugger;
        var str = "";

        if ($("#Title").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Title is Required. <br/>";
        }
        if ($("#FirstName").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; FirstName is Required. <br/>";
        }
        if ($("#LastName").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; LastName is Required. <br/>";
        }
        if ($("#DateOfBirth").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; DateOfBirth is Required. <br/>";
        }
        if ($("#Gender").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Gender is Required. <br/>";
        }
        if ($("#Citizenship").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Id Type is Required. <br/>";
        }
        //if ($("#CitizenShipIdCopy").val() == "") {
        //    str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Id Type Copy is Required. <br/>";
        //}
        if ($("#CountryId").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; CountryId is Required. <br/>";
        }
        if ($("#PhoneNumber").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; PhoneNumber is Required. <br/>";
        }
        if ($("#EmailAddress").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; EmailAddress is Required. <br/>";
        }
        if ($("#MotherTongue").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Mother Tongue is Required. <br/>";
        }
        if ($("#Nationality").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Nationality is Required. <br/>";
        }
        //if ($("#ApplicationLetter").val() == "") {
        //    str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; ApplicationLetter is Required. <br/>";
        //}
        //if ($("#Resume").val() == "") {
        //    str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Resume is Required. <br/>";
        //}
        if ($("#Address").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Address is Required. <br/>";
        }
        if ($("#JobDescription").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; JobDescription is Required. <br/>";
        }
        if ($("#Referer").val() == "") {
            str = str + "<i class='fa fa-bookmark vd_yellow'></i> &nbsp; Referer is Required. <br/>";
        }
        if (str != "") {
            $.NotificationApp.send("Information!", "Check below fields please." + str, 'top-right', '#da8609', 'warning');
        }
        else {
            data = new FormData();
            var ApplicantId = $("#ApplicantId").val();
            var Title = $("#Title").val();
            var FirstName = $("#FirstName").val();
            var MiddleName = $("#MiddleName").val();
            var LastName = $("#LastName").val();
            var DateOfBirth = $("#DateOfBirth").val();
            var Citizenship = $("#Citizenship").val();
            var CitizenShipIdCopy = $("#CitizenShipIdCopy").val();
            var GenderId = $("#Gender").val();
            var Address = $("#Address").val();
            var CountryId = $("#CountryId").val();
            var EmailAddress = $("#EmailAddress").val();
            var PhoneNumber = $("#PhoneNumber").val();
            var AlternativePhoneNumber = $("#AlternativePhoneNumber").val();
            var MotherTongue = $("#MotherTongue").val();
            var OtherLanguages = $("#OtherLanguages").val();
            var Nationality = $("#Nationality").val();
            var ApplicationLetter = $("#ApplicationLetter").val();
            var Resume = $("#Resume").val();
            var Photo = $("#Photo").val();
            var SpecialNeed = $("#SpecialNeed").val();
            var SpecialNeedDetails = $("#SpecialNeedDetails").val();
            var ApplicantQualificationId = $("ApplicantQualificationId").val();
            var QuaStartDate = $("#QuaStartDate").val();
            var QuaEndDate = $("#QuaEndDate").val();
            var Discipline = $("#Discipline").val();
            var University = $("#University").val();
            var QuaNationality = $("#QuaNationality").val();
            var Degree = $("#Degree").val();
            var Class = $("#Class").val();
            var EmployerName = $("#EmployerName").val();
            var TypeOfIndustry = $("#TypeOfIndustry").val();
            var EmpAddress = $("#EmpAddress").val();
            var City = $("#City").val();
            var TelephoneNo = $("#TelephoneNumber").val();
            var JobTitle = $("#JobTitle").val();
            var TitleOfSupervisor = $("#TitleOfSupervisor").val();
            var EmpStartDate = $("#EmpStartDate").val();
            var EmpEndDate = $("#EmpEndDate").val();
            var Responsibility = $("#Responsibility").val();
            var MonthlySalary = $("#MonthlySalary").val();
            var NoticePeriod = $("#NoticePeriod").val();
            var EmpFirstName = $("#EmpFirstName").val();
            var SecondName = $("#SecondName").val();
            var Position = $("#Position").val();
            var RelationshipTOApplicant = $("#RelationshipTOApplicant").val();
            var NameOfTheOrganization = $("#NameOfTheOrganization").val();
            var TelephoneContact = $("#TelephoneContact").val();
            var EmpEmailAddress = $("#EmpEmailAddress").val();
            var JobDescription = $("#JobDescription").val();
            var RefererId = $("#Referer").val();
            var English = $("#English").is(':checked');
            var Kiswahili = $("#Kiswahili").is(':checked');

            // Resume

            var FileName = "";
            debugger;
            var files = $("#Photo").get(0).files;
            if (files.length > 0) {
                for (var i = 0; i < files.length; i++) {
                    data.append(files[i].name, files[i], "PHOTO_" + files[i].name);
                    FileName = "PHOTO_" + files[i].name;
                }
            }

            var Photo = FileName;

            FileName = "";

            files = $("#Resume").get(0).files;
            if (files.length > 0) {
                for (var i = 0; i < files.length; i++) {
                    data.append(files[i].name, files[i], "RESUME_" + files[i].name);
                    FileName = "RESUME_" + files[i].name;
                }
            }

            var Resume = FileName;


            FileName = "";

            files = $("#CitizenShipIdCopy").get(0).files;
            if (files.length > 0) {
                for (var j = 0; j < files.length; j++) {
                    data.append(files[j].name, files[j], "IDCOPY_" + files[j].name);
                    FileName = "IDCOPY_" + files[j].name;
                }
            }

            var CitizenShipIdCopy = FileName;

            // Application Letter

            FileName = "";

            files = $("#ApplicationLetter").get(0).files;
            if (files.length > 0) {
                for (var j = 0; j < files.length; j++) {
                    data.append(files[j].name, files[j], "APPLICATIONLETTER_" + files[j].name);
                    FileName = "APPLICATIONLETTER_" + files[j].name;
                }
            }

            var ApplicationLetter = FileName;

            // Bachelors

            FileName = "";

            files = $("#Bachelors").get(0).files;
            if (files.length > 0) {
                for (var k = 0; k < files.length; k++) {
                    data.append(files[k].name, files[k], "BACHELORS_" + files[k].name);
                    FileName = "BACHELORS_" + files[k].name;
                }
            }

            var Bachelors = FileName;

            // Diploma

            FileName = "";

            files = $("#Diploma").get(0).files;
            if (files.length > 0) {
                for (var l = 0; l < files.length; l++) {
                    data.append(files[l].name, files[l], "DIPLOMA_" + files[l].name);
                    FileName = "DIPLOMA_" + files[l].name;
                }
            }

            var Diploma = FileName;

            // MSC

            FileName = "";

            files = $("#MSC").get(0).files;
            if (files.length > 0) {
                for (var m = 0; m < files.length; m++) {
                    data.append(files[m].name, files[m], "MSC_" + files[m].name);
                    FileName = "MSC_" + files[m].name;
                }
            }

            var MSC = FileName;

            // PHD


            FileName = "";

            files = $("#PHD").get(0).files;
            if (files.length > 0) {
                for (var n = 0; n < files.length; n++) {
                    data.append(files[n].name, files[n], "PHD_" + files[n].name);
                    FileName = "PHD_" + files[n].name;
                }
            }

            var PHD = FileName;


            var Data = {
                "ApplicantId": ApplicantId,
                "Title": Title,
                "FirstName": FirstName,
                "MiddleName": MiddleName,
                "LastName": LastName,
                "DateOfBirth": DateOfBirth,
                "IdTypeMasterId": Citizenship,
                "CitizenShipIdCopy": CitizenShipIdCopy,
                "GenderId": GenderId,
                "Address": Address,
                "CountryId": CountryId,
                "EmailAddress": EmailAddress,
                "PhoneNumber": PhoneNumber,
                "AlternativePhoneNumber": AlternativePhoneNumber,
                "MotherTongue": MotherTongue,
                "OtherLanguages": OtherLanguages,
                "Nationality": Nationality,
                "ApplicationLetter": ApplicationLetter,
                "CV": Resume,
                "Photo": Photo,
                "SpecialNeed": SpecialNeed,
                "SpecialNeedDetails": SpecialNeedDetails,
                "Bachelors": Bachelors,
                "Diploma": Diploma,
                "MSC": MSC,
                "PHD": PHD,
                "QuaStartDate": QuaStartDate,
                "QuaEndDate": QuaEndDate,
                "Discipline": Discipline,
                "University": University,
                "QuaNationality": QuaNationality,
                "Degree": Degree,
                "Class": Class,
                "EmployerName": EmployerName,
                "TypeOfIndustry": TypeOfIndustry,
                "EmpAddress": EmpAddress,
                "City": City,
                "TelephoneNo": TelephoneNo,
                "JobTitle": JobTitle,
                "TitleOfSupervisor": TitleOfSupervisor,
                "EmpStartDate": EmpStartDate,
                "EmpEndDate": EmpEndDate,
                "Responsibility": Responsibility,
                "MonthlySalary": MonthlySalary,
                "NoticePeriod": NoticePeriod,
                "EmpFirstName": EmpFirstName,
                "SecondName": SecondName,
                "Position": Position,
                "RelationshipTOApplicant": RelationshipTOApplicant,
                "NameOfTheOrganization": NameOfTheOrganization,
                "TelephoneContact": TelephoneContact,
                "EmpEmailAddress": EmpEmailAddress,
                "JobDescription": JobDescription,
                "RefererId": RefererId,
                "English": English,
                "Kiswahili": Kiswahili
            }

            debugger;
            for (var key in Data) {
                data.append(key, Data[key]);
            }
            Save();
        }

        function Save() {
            debugger;
            $.ajax({
                url: '../UpdateProfile/SaveApplicantRegistration',
                data: data,
                type: 'POST',
                contentType: false,
                dataType: 'json',
                encode: true,
                processData: false,
                cache: false,
                success: function (data) {
                    if (data == "SUCCESS") {
                        $.NotificationApp.send("Success!", "Applicant Profile is Updated successfully !!", 'top-right', '#5ba035', 'success');
                        //Clear();
                        // Cancel();
                    }
                    else if (data == "ALREADY_EXISTS") {
                        $.NotificationApp.send("Warning!", "Already Exists.", 'top-right', '#da8609', 'warning');
                    }
                    else if (data == "Failed") {
                        fail();
                    }
                    else {
                        $.NotificationApp.send("Information!", "Check below fields please" + data, 'top-right', '#da8609', 'warning');
                    }
                }
            });
        }
    }

    function Clear() {
        $("#Title")[0].selectedIndex = 0;
        $("#FirstName").val("");
        $("#MiddleName").val("");
        $("#LastName").val("");
        $("#DateOfBirth").val("");
        $("#Gender")[0].selectedIndex = 0;
        $("#Citizenship").val("");
        $("#CitizenShipIdCopy").val("");
        $("#CountryId")[0].selectedIndex = 0;
        $("#PhoneNumber").val("");
        $("#AlternativePhoneNumber").val("");
        $("#EmailAddress").val("");
        $("#LanguageSpoken").val("");
        $("#Nationality").val("");
        $("#ApplicationLetter").val("");
        $("#Resume").val("");
        $("#Address").val("");
        $("#SpecialNeed")[0].selectedIndex = 0;
        $("#Bachelors").val("");
        $("#Diploma").val("");
        $("#MSC").val("");
        $("#PHD").val("");
        $("#QuaEndDate").val("");
        $("#QuaStartDate").val("");
        $("#Discipline").val("");
        $("#University").val("");
        $("#QuaNationality").val("");
        $("#Degree").val("");
        $("#Class").val("");
        $("#EmployerName").val("");
        $("#TypeOfIndustry").val("");
        $("#TelephoneNumber").val("");
        $("#TitleOfSupervisor").val("");
        $("#JobTitle").val("");
        $("#City").val("");
        $("#EmpStartDate").val("");
        $("#EmpEndDate").val("");
        $("#Responsibility").val("");
        $("#MonthlySalary").val("");
        $("#NoticePeriod").val("");
        $("#EmpAddress").val("");
        $("#JobDescription").val("");
        $("#Photo").val("");
        $("#English").prop("checked", false);
        $("#Kiswahili").prop("checked", false);
        $("#MotherTongue").val("");
        $("#OtherLanguages").val("");
        $("#SpecialNeedDetails").val("");

        $("#EmpFirstName").val("");
        $("#SecondName").val("");
        $("#Position").val("");
        $("#RelationshipTOApplicant").val("");
        $("#NameOfTheOrganization").val("");
        $("#TelephoneContact").val("");
        $("#EmpEmailAddress").val("");
        $("#JobDescription").val("");
        $("#Referer").val("");
    }
</script>
<!--Form Wizard-->
<script src="~/assets/libs/jquery-steps/build/jquery.steps.min.js"></script>

<!--wizard initialization-->
<script src="~/assets/js/jquery.wizard.js"></script>
