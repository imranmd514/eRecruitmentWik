function BeforeContextMenu(e) { var t = e, s = t.toString().split("/").length - 2, a = t.toString().split("/")[s]; $.ajax({ type: "get", url: "../FrontPage/Isalreadyexistsmenu", data: { str: a }, success: function (t) { "0" == t && ($("#addremove").text("Add to Favorite"), $("#favrturl").val(e), $("#AddOrRemove").val("0"), $("#context-menu").show()), "-1" == t ? ($("#context-menu").hide(), $("#AddOrRemove").val("")) : "1" == t && ($("#favrturl").val(e), $("#addremove").text("Remove From Favorite"), $("#AddOrRemove").val("1"), $("#context-menu").show()) } }) } function moveUp() { 0 == $(".selected").length && $("#example").find(".gallery-item :first").addClass("success").focus(), $(".selected").prev("a").length > 0 ? $(".selected").removeClass("success").prev("a").addClass("success").focus() : ($(".selected").removeClass("selected"), $("#example a:last-child").addClass("success").focus()) } function moveDown() { 0 == $(".selected").length && $("#example .gallery-item").addClass("success").focus(), $(".selected").next("a").length > 0 ? $(".selected").removeClass("success").next("a").addClass("success").focus() : ($(".selected").removeClass("success"), $("#example .gallery-item").next().addClass("success").focus()) } function isotopeFilter() { $container.isotope({ filter: filterFns }) } function AddToFavrt() { var e = $("#AddOrRemove").val(), t = $("#favrturl").val(), s = t.split("/").length - 2, a = t.split("/")[s]; 0 == e ? $.ajax({ type: "get", url: "../FrontPage/Addfavrt", data: { str: a }, success: function (e) { "success" == e && Loadfavrt() } }) : 1 == e && $.ajax({ type: "get", url: "../FrontPage/favrtmenuid", data: { str: a }, success: function (e) { $.ajax({ type: "get", url: "../FrontPage/RemoveFavrt", data: { id: e }, success: function (e) { "success" == e && Loadfavrt() } }) } }) } function HaveChildred(e) { var t = Number($(e).attr("Id").split("_")[1]); $("#h_" + t).val(); $.ajax({ type: "get", url: "../FrontPage/IsChildExists", data: { id: t }, success: function (e) { valid = e, "True" == valid && GetSubchild(t) } }) } function GetSubchild(e) { $.ajax({ type: "get", url: "../FrontPage/GetChilds", data: { id: e }, success: function (e) { $("#View").modal("show"), $("#Viewsubmenu").html(e), $(".gallery-item").contextmenu({ target: "#context-menu", before: function (e, t, s) { e.preventDefault(); for (var s = e.target || e.srcElement, a = 1, r = ""; s && !s.id;) if (1 == a) { s = s.parentNode, r = s, $("#favrturl").val(r); break } return !0 } }) } }) } $("#filter-text").focus(), $(".breadcrumb").hide(), $("#masterfavrt").hide(), HideLoader(), $(".vd_head-section clearfix").hide(); var $container = $(".isotope").isotope({ itemSelector: ".gallery-item ", layoutMode: "fitRows" }); $(".myanchor").contextmenu({ target: "#context-menu", before: function (e, t, s) { e.preventDefault(); for (var s = e.target || e.srcElement, a = 1, r = ""; s && !s.id;) if (1 == a) { s = s.parentNode, r = s, BeforeContextMenu(r); break } return !0 } }), $("#filter-text").bind("keyup", function () { this.value.toLowerCase(); isotopeFilter() }), document.onkeydown = function (e) { switch (e.keyCode) { case 38: moveUp(); break; case 40: moveDown() } }, $(document).on("blur", ".selected", function () { $(this).removeClass("success") }); var filterFns = function () { var e = $("#filter-text").val().toLowerCase(), t = new RegExp(e, "gi"), s = $(this).find(".filter-name").text(); return s.match(t) };